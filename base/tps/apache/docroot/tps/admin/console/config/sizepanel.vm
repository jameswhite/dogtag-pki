<!-- --- BEGIN COPYRIGHT BLOCK ---
     This library is free software; you can redistribute it and/or
     modify it under the terms of the GNU Lesser General Public
     License as published by the Free Software Foundation.
     
     This library is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     Lesser General Public License for more details.
     
     You should have received a copy of the GNU Lesser General Public
     License along with this library; if not, write to the Free Software
     Foundation, Inc., 51 Franklin Street, Fifth Floor,
     Boston, MA  02110-1301  USA 
     
     Copyright (C) 2007 Red Hat, Inc.
     All rights reserved.
     --- END COPYRIGHT BLOCK --- -->
<style type="text/css">
div#advance
{
  margin: 0px 20px 0px 20px;
  display: none;
}
div#simple
{
  margin: 0px 20px 0px 20px;
  display: block;
}
</style>

<SCRIPT type="text/JavaScript">
var keys_ecc_curve_list="$keys_ecc_curve_list";
var keys_ecc_curve_display_list = "$keys_ecc_curve_display_list";
var keys_rsa_size_display_list = "$keys_rsa_size_display_list";

function myOnLoad() {
}

function performPanel() {
    with (document.forms[0]) {
        submit();
    }
}

function toggleLayer(whichLayer)
{
  if (document.getElementById) {
    // this is the way the standards work
    var style2 = document.getElementById(whichLayer).style;
    if (style2.display == "block") {
      style2.display = "none";
    } else {
      style2.display = "block";
    }
  }
}

function toggleLayer1(whichLayer)
{
  if (document.getElementById) {
    // this is the way the standards work
    var style2 = document.getElementById(whichLayer).style;
    if (style2.display == "block") {
      style2.display = "none";
    } else if (style2.display == "") {
      style2.display = "none";
    } else {
      style2.display = "block";
    }
  }
}

function keyTypeChange()
{
  var form = document.forms[0];

  var keyTypeSelect = document.forms[0].elements['keytype'];
  for (var i = 0; i < form.length; i++) {
    var name = form[i].name;
    if (name.indexOf('_keytype') != -1) {
      if (keyTypeSelect.value.indexOf('ecc') != -1) {
        form.elements[name].selectedIndex = keyTypeSelect.selectedIndex;
      }
    }
  }
}

function defaultChange()
{
  var form = document.forms[0];
  var choiceSelect = document.forms[0].elements['choice'];
  for (var i = 0; i < form.length; i++) {
    var name = form[i].name;
    if (name.indexOf('_choice') != -1) {
      for (var j = 0; j < form.elements[name].length; j++) {
        var c = form.elements[name];
        c[j].checked = choiceSelect[j].checked;
      }
    }
  }
}

function customChange()
{
  var form = document.forms[0];
  var choiceSelect = document.forms[0].elements['choice'];
  for (var i = 0; i < form.length; i++) {
    var name = form[i].name;
    if (name.indexOf('_choice') != -1) {
      for (var j = 0; j < form.elements[name].length; j++) {
        var c = form.elements[name];
        c[j].checked = choiceSelect[j].checked;
      }
    }
  }
}

function textChange()
{
  var customSize = document.forms[0].elements['custom_size'];
  var form = document.forms[0];
  for (var i = 0; i < form.length; i++) {
    var name = form[i].name;
    if (name.indexOf('_custom_size') != -1) {
      form.elements[name].value = customSize.value;
    }
  }
}

function displayCurveList()
{
  var list = keys_ecc_curve_display_list.split(",");
  var linelen = 0;
  for (var i=0; i < list.length -1 ; i++) {
    document.write(list[i] + ",");
    linelen = linelen + list[i].length;
    if (linelen >= 60) {
      document.write("<br/>");
      linelen=0;
    }
  }
  document.write(list[list.length -1]);
}

function displayStrengthList()
{
  var list = keys_rsa_size_display_list.split(",");
  var linelen = 0;
  for (var i=0; i < list.length -1 ; i++) {
    document.write(list[i] + ",");
    linelen = linelen + list[i].length;
    if (linelen >= 60) {
      document.write("<br/>");
      linelen=0;
    }
  }
  document.write(list[list.length -1]);
}

</SCRIPT>
Select the key pair type(s) and associated key pair size(s) from the pulldown menus. <a href="javascript:toggle_details();">[Details]</a>
<p>
Note that only RSA is supported for the audit_signing certificate at this point
<p>
<SCRIPT type="text/JavaScript">
function toggle_details()
{
  d = document.getElementById('details');
  if (d.style.display == "block") {
    d.style.display="none";
  } else {
    d.style.display="block";
  }
}
</SCRIPT>
<div id=details style="display: none;">
<p> 
Each certificate can have its own key pair generated with its own independent settings or common settings can be applied to all key pairs. At minimum, each key pair has to define what <i>type</i> it is by identifying a cipher family and then has to set a <i>strength</i> for that key.
</p>
<ul>
<li>
<b><i>Key Type</i></b>. Sets the cipher family to use to generate the key pair. RSA and ECC key types have slightly different strength options.
</li>
<li>
<b><i>RSA strength: Key Size</i></b>. Sets the key length for the generated pair. The key length can be one of the lenghs listed below.  Longer keys are stronger, which makes them more secure.
However, longer key pair sizes also increase the time required to perform operations such as signing certificates, so long keys can affect performance.
<br/><ul style="list-style:none"><li><i>
<SCRIPT type="text/JavaScript">
displayStrengthList();
</SCRIPT></i></li></ul>
</li>
<li>
<b><i>ECC strength: Curve Name</i></b>. Sets the curve algorithm to use, which can be any one of the curves listed below.  The curves that are included in parenthesis are equivalent - and either name can be used.  Note that not all curves may be supported by the token.
<br/><ul style="list-style:none"><li><i>
<SCRIPT type="text/JavaScript">
displayCurveList();
</SCRIPT></i></li></ul>
</li>
</ul>
<br/>
</div>
#if ($errorString != "")
<img src="/pki/images/icon_crit_update.gif">&nbsp;<font color="red">$errorString</font>
#end
<p>
<div id="simple">
<p>
<table width=100%>
<tr>
  <td align=right><a href="javascript:toggleLayer1('simple'); toggleLayer('advance');" title="Advanced">[Advanced]</a></td>
</tr>
</table>
<p>
<H2>Common Key Settings</H2>
<p>
<table width=100% class="details">
      <tr>
        <th width="30%">Key Type:</th>
        <td><select name="keytype" onChange="keyTypeChange()"><option value=rsa>RSA</option><option value=ecc>ECC</option></select></td>
      </tr>
</table>
<p>

<p>
    <input
#if ($select == "default")
 checked
#end
 onChange="defaultChange()" type=radio name="choice" value="default"><b>Use the default key size ($default_keysize  bits for RSA; curve $default_ecc_curvename  for ECC)</b>.
    <p>
    <input
#if ($select == "custom")
 checked
#end
 onChange="customChange()" type=radio name="choice" value="custom"><b>Use the following custom key strength:</b>
                                                                                
    <p>
<table width=100% class="details">
      <tr>
        <th>Key Size or Curve (see Details above):</th>
        <td><input onChange="textChange()" type="text" size="20" name="custom_size" value="" /></td>
      </tr>
</table>
<p>
</div>

<div id="advance">
<p>
<table width=100%>
<tr>
  <td align=right><a href="javascript:toggleLayer1('simple');toggleLayer('advance');" title="Simple">[Simple]</a></td>
</tr>
</table>

#foreach ($item in $certs)
<H2>Key for $item.getUserFriendlyName()</H2>
<p>
<table width=100% class="details">
      <tr>
        <th width="30%">Key Type:</th>
#if ($item.getCertTag() == "audit_signing")
        <td><select name="$item.getCertTag()_keytype"><option value=rsa>RSA</option></select></td>
#else
        <td><select name="$item.getCertTag()_keytype"><option value=rsa>RSA</option><option value=ecc>ECC</option></select></td>
#end
      </tr>
</table>
<p>
    <input
#if ($item.useDefaultKey())
 checked
#end
 type=radio name=$item.getCertTag()_choice value="default"><b>Use the default key size ($default_keysize bits for RSA, curve $default_ecc_curvename for ECC).
    <p>
    <input
#if (!$item.useDefaultKey())
 checked
#end
 type=radio name=$item.getCertTag()_choice value="custom"><b>Use the following custom key strength:</b>
                                                                                
    <p>
<table width=100% class="details">
      <tr>
        <th>Key Size or Curve (see Details above):</th>
        <td><input type="text" size="20" name=$item.getCertTag()_custom_size value="" /></td>
      </tr>
</table>
#end
</div>

<br/>
<br/>
<br/>
#if ($firsttime == 'false')
<input type="CHECKBOX" NAME="generateKeyPair">New Keys<p>
#end
<p>
    <div align="right">
      <hr />
<i>Note: After pressing Next, keys will be generated on the server, which will take some time to complete.  Please wait for the next panel to appear.</i>
      &nbsp;
    </div>
