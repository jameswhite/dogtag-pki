commit 34496a33fbbee462f67410e2ee54a7986b3aedae
Author: Endi Sukma Dewata <edewata@redhat.com>
Date:   Mon Feb 20 11:42:23 2012 -0600

    Renamed Utils to avoid conflicts.
    
    The Utils classes in com.netscape.cms.publish.publishers
    and com.netscape.cms.servlet.common packages have been renamed
    to PublisherUtils and ServletUtils to avoid conflicts with
    com.netscape.cmsutil.util.Utils.
    
    Ticket #90

--- a/pki/base/common/src/CMakeLists.txt
+++ b/pki/base/common/src/CMakeLists.txt
@@ -16,11 +16,10 @@
         /usr/share/java
 )
 
-find_file(OSUTIL_JAR
+find_file(COMMONS_CODEC_JAR
     NAMES
-        osutil.jar
+        commons-codec.jar
     PATHS
-        ${JAVA_LIB_INSTALL_DIR}
         /usr/share/java
 )
 
@@ -406,7 +405,7 @@
     com/netscape/cms/publish/publishers/FileBasedPublisher.java
     com/netscape/cms/publish/publishers/LdapCrlPublisher.java
     com/netscape/cms/publish/publishers/LdapCertificatePairPublisher.java
-    com/netscape/cms/publish/publishers/Utils.java
+    com/netscape/cms/publish/publishers/PublisherUtils.java
     com/netscape/cms/publish/publishers/OCSPPublisher.java
     com/netscape/cms/publish/publishers/LdapCertSubjPublisher.java
     com/netscape/cms/policy/constraints/UniqueSubjectNameConstraints.java
@@ -473,7 +472,7 @@
     com/netscape/cms/servlet/common/CMSRequest.java
     com/netscape/cms/servlet/common/CMSFile.java
     com/netscape/cms/servlet/common/IRawJS.java
-    com/netscape/cms/servlet/common/Utils.java
+    com/netscape/cms/servlet/common/ServletUtils.java
     com/netscape/cms/servlet/common/GenPendingTemplateFiller.java
     com/netscape/cms/servlet/common/CMSGWResources.java
     com/netscape/cms/servlet/common/GenUnexpectedErrorTemplateFiller.java
@@ -840,7 +839,6 @@
     com/netscape/cmscore/util/ExceptionFormatter.java
     com/netscape/cmscore/util/StatsSubsystem.java
     com/netscape/cmscore/util/FileDialogFilter.java
-    com/netscape/cmscore/util/OsSubsystem.java
     com/netscape/cmscore/util/Debug.java
     com/netscape/cmscore/util/UtilResources.java
     com/netscape/cmscore/policy/JavaScriptRequestProxy.java
@@ -996,21 +994,21 @@
 set(CMAKE_JAVA_INCLUDE_PATH
     ${PKI_NSUTIL_JAR} ${PKI_CMSUTIL_JAR}
     ${LDAPJDK_JAR} ${SERVLET_JAR} ${VELOCITY_JAR} ${XALAN_JAR} ${XERCES_JAR}
-    ${JSS_JAR} ${OSUTIL_JAR} ${SYMKEY_JAR})
+    ${JSS_JAR} ${COMMONS_CODEC_JAR} ${SYMKEY_JAR})
 
 set(CMAKE_JAVA_TARGET_VERSION ${APPLICATION_VERSION})
 
 # build pki-certsrv
 set(CMAKE_JAR_CLASSES_PREFIX com/netscape/certsrv)
 add_jar(pki-certsrv ${pki-certsrv_java_SRCS})
-add_dependencies(pki-certsrv osutil pki-nsutil pki-cmsutil)
+add_dependencies(pki-certsrv pki-nsutil pki-cmsutil)
 install_jar(pki-certsrv ${JAVA_JAR_INSTALL_DIR}/pki)
 set(PKI_CERTSRV_JAR ${pki-certsrv_JAR_FILE} CACHE INTERNAL "pki-certsrv jar file")
 
 # build pki-cms
 set(CMAKE_JAR_CLASSES_PREFIX com/netscape/cms)
 add_jar(pki-cms ${pki-cms_java_SRCS})
-add_dependencies(pki-cms osutil pki-nsutil pki-cmsutil pki-certsrv)
+add_dependencies(pki-cms pki-nsutil pki-cmsutil pki-certsrv)
 install_jar(pki-cms ${JAVA_JAR_INSTALL_DIR}/pki)
 set(PKI_CMS_JAR ${pki-cms_JAR_FILE} CACHE INTERNAL "pki-cms jar file")
 
@@ -1028,12 +1026,12 @@
 # build pki-cmscore
 set(CMAKE_JAR_CLASSES_PREFIX com/netscape/cmscore)
 add_jar(pki-cmscore ${pki-cmscore_java_SRCS})
-add_dependencies(pki-cmscore osutil pki-nsutil pki-cmsutil pki-certsrv pki-cms)
+add_dependencies(pki-cmscore pki-nsutil pki-cmsutil pki-certsrv pki-cms)
 install_jar(pki-cmscore ${JAVA_JAR_INSTALL_DIR}/pki)
 set(PKI_CMSCORE_JAR ${pki-cmscore_JAR_FILE} CACHE INTERNAL "pki-cmscore jar file")
 
 # build pki-cmsbundle
 add_jar(pki-cmsbundle ${pki-cmsbundle_RCS})
-add_dependencies(pki-cmsbundle osutil pki-nsutil pki-cmsutil pki-certsrv pki-cms pki-cmscore)
+add_dependencies(pki-cmsbundle pki-nsutil pki-cmsutil pki-certsrv pki-cms pki-cmscore)
 install_jar(pki-cmsbundle ${JAVA_JAR_INSTALL_DIR}/pki)
 set(PKI_CMSBUNDLE_JAR ${pki-cmsbundle_JAR_FILE} CACHE INTERNAL "pki-cmsbundle jar file")
--- a/pki/base/common/src/com/netscape/cms/publish/publishers/LdapCertSubjPublisher.java
+++ b/pki/base/common/src/com/netscape/cms/publish/publishers/LdapCertSubjPublisher.java
@@ -244,7 +244,7 @@
 
                 while (vals.hasMoreElements()) {
                     val = (byte[]) vals.nextElement();
-                    if (Utils.byteArraysAreEqual(certEnc, val)) {
+                    if (PublisherUtils.byteArraysAreEqual(certEnc, val)) {
                         hasCert = true;
                         continue;
                     }
--- a/pki/base/common/src/com/netscape/cms/publish/publishers/LdapEncryptCertPublisher.java
+++ b/pki/base/common/src/com/netscape/cms/publish/publishers/LdapEncryptCertPublisher.java
@@ -312,7 +312,7 @@
 
         while (vals.hasMoreElements()) {
             val = (byte[]) vals.nextElement();
-            if (Utils.byteArraysAreEqual(val, bval)) {
+            if (PublisherUtils.byteArraysAreEqual(val, bval)) {
                 return true;
             }
         }
--- a/pki/base/common/src/com/netscape/cms/publish/publishers/LdapUserCertPublisher.java
+++ b/pki/base/common/src/com/netscape/cms/publish/publishers/LdapUserCertPublisher.java
@@ -286,7 +286,7 @@
             val = (byte[]) vals.nextElement();
             if (val.length == 0)
                 continue;
-            if (Utils.byteArraysAreEqual(val, bval)) {
+            if (PublisherUtils.byteArraysAreEqual(val, bval)) {
                 return true;
             }
         }
--- /dev/null
+++ b/pki/base/common/src/com/netscape/cms/publish/publishers/PublisherUtils.java
@@ -0,0 +1,136 @@
+// --- BEGIN COPYRIGHT BLOCK ---
+// This program is free software; you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation; version 2 of the License.
+//
+// This program is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License along
+// with this program; if not, write to the Free Software Foundation, Inc.,
+// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+//
+// (C) 2007 Red Hat, Inc.
+// All rights reserved.
+// --- END COPYRIGHT BLOCK ---
+package com.netscape.cms.publish.publishers;
+
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.OutputStream;
+import java.io.OutputStreamWriter;
+import java.net.InetAddress;
+import java.net.UnknownHostException;
+import java.text.SimpleDateFormat;
+import java.util.Date;
+import java.util.Vector;
+
+/**
+ * Publisher utility class.
+ * 
+ * @version $Revision$, $Date$
+ */
+public class PublisherUtils {
+    public static void checkHost(String hostname) throws UnknownHostException {
+        InetAddress.getByName(hostname);
+    }
+
+    public static void copyStream(InputStream in, OutputStream out) throws IOException {
+        byte[] buf = new byte[4096];
+        int len;
+
+        while ((len = in.read(buf)) != -1) {
+            out.write(buf, 0, len);
+        }
+    }
+
+    public static void copyStream(BufferedReader in, OutputStreamWriter out) throws IOException {
+        char[] buf = new char[4096];
+        int len;
+
+        while ((len = in.read(buf)) != -1) {
+            out.write(buf, 0, len);
+        }
+    }
+
+    /// Sorts an array of Strings.
+    // Java currently has no general sort function.  Sorting Strings is
+    // common enough that it's worth making a special case.
+    public static void sortStrings(String[] strings) {
+        // Just does a bubblesort.
+        for (int i = 0; i < strings.length - 1; ++i) {
+            for (int j = i + 1; j < strings.length; ++j) {
+                if (strings[i].compareTo(strings[j]) > 0) {
+                    String t = strings[i];
+
+                    strings[i] = strings[j];
+                    strings[j] = t;
+                }
+            }
+        }
+    }
+
+    /// Returns a date string formatted in Unix ls style - if it's within
+    // six months of now, Mmm dd hh:ss, else Mmm dd  yyyy.
+    public static String lsDateStr(Date date) {
+        long dateTime = date.getTime();
+
+        if (dateTime == -1L)
+            return "------------";
+        long nowTime = System.currentTimeMillis();
+        SimpleDateFormat formatter = new SimpleDateFormat();
+
+        if (Math.abs(nowTime - dateTime) < 183L * 24L * 60L * 60L * 1000L)
+            formatter.applyPattern("MMM dd hh:ss");
+        else
+            formatter.applyPattern("MMM dd yyyy");
+        return formatter.format(date);
+    }
+
+    /**
+     * compares contents two byte arrays returning true if exactly same.
+     */
+    static public boolean byteArraysAreEqual(byte[] a, byte[] b) {
+        if (a.length != b.length)
+            return false;
+        for (int i = 0; i < a.length; i++) {
+            if (a[i] != b[i])
+                return false;
+        }
+        return true;
+    }
+
+    /**
+     * strips out double quotes around String parameter
+     * 
+     * @param s the string potentially bracketed with double quotes
+     * @return string stripped of surrounding double quotes
+     */
+    public static String stripQuotes(String s) {
+        if (s == null) {
+            return s;
+        }
+
+        if ((s.startsWith("\"")) && (s.endsWith("\""))) {
+            return (s.substring(1, (s.length() - 1)));
+        }
+
+        return s;
+    }
+
+    /**
+     * returns an array of strings from a vector of Strings
+     * there'll be trouble if the Vector contains something other
+     * than just Strings
+     */
+    public static String[] getStringArrayFromVector(Vector v) {
+        String s[] = new String[v.size()];
+
+        v.copyInto(s);
+        return s;
+    }
+
+}
--- a/pki/base/common/src/com/netscape/cms/servlet/base/CMSServlet.java
+++ b/pki/base/common/src/com/netscape/cms/servlet/base/CMSServlet.java
@@ -19,6 +19,7 @@
 
 import com.netscape.cms.servlet.common.*;
 import com.netscape.cms.servlet.common.AuthCredentials;
+import com.netscape.cmsutil.util.Utils;
 import com.netscape.cmsutil.xml.*;
 import com.netscape.certsrv.base.SessionContext;
 import java.io.*;
@@ -285,7 +286,7 @@
         mId = sc.getInitParameter(PROP_ID);
 
         try {
-            mAclMethod = Utils.initializeAuthz(sc, mAuthz, mId);
+            mAclMethod = ServletUtils.initializeAuthz(sc, mAuthz, mId);
         } catch (ServletException e) {
             log(ILogger.LL_FAILURE, e.toString());
             throw e;
@@ -1578,7 +1579,7 @@
     protected String hashPassword(String pwd) {
         String salt = generateSalt();
         byte[] pwdDigest = mSHADigest.digest((salt + pwd).getBytes());
-        String b64E = com.netscape.osutil.OSUtil.BtoA(pwdDigest);
+        String b64E = Utils.base64encode(pwdDigest);
 
         return "{SHA}" + salt + ";" + b64E;
     }
--- /dev/null
+++ b/pki/base/common/src/com/netscape/cms/servlet/common/ServletUtils.java
@@ -0,0 +1,106 @@
+// --- BEGIN COPYRIGHT BLOCK ---
+// This program is free software; you can redistribute it and/or modify
+// it under the terms of the GNU General Public License as published by
+// the Free Software Foundation; version 2 of the License.
+//
+// This program is distributed in the hope that it will be useful,
+// but WITHOUT ANY WARRANTY; without even the implied warranty of
+// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+// GNU General Public License for more details.
+//
+// You should have received a copy of the GNU General Public License along
+// with this program; if not, write to the Free Software Foundation, Inc.,
+// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
+//
+// (C) 2007 Red Hat, Inc.
+// All rights reserved.
+// --- END COPYRIGHT BLOCK ---
+package com.netscape.cms.servlet.common;
+
+import java.util.StringTokenizer;
+
+import javax.servlet.ServletConfig;
+import javax.servlet.ServletException;
+
+import com.netscape.certsrv.apps.CMS;
+import com.netscape.certsrv.authorization.IAuthzSubsystem;
+import com.netscape.certsrv.base.EBaseException;
+import com.netscape.certsrv.base.IConfigStore;
+
+/**
+ * Utility class
+ * 
+ * @version $Revision$, $Date$
+ */
+public class ServletUtils {
+
+    public final static String AUTHZ_SRC_LDAP = "ldap";
+    public final static String AUTHZ_SRC_TYPE = "sourceType";
+    public final static String AUTHZ_CONFIG_STORE = "authz";
+    public final static String AUTHZ_SRC_XML = "web.xml";
+    public final static String PROP_AUTHZ_MGR = "AuthzMgr";
+    public final static String PROP_ACL = "ACLinfo";
+    public final static String AUTHZ_MGR_BASIC = "BasicAclAuthz";
+    public final static String AUTHZ_MGR_LDAP = "DirAclAuthz";
+
+    public static String initializeAuthz(ServletConfig sc,
+            IAuthzSubsystem authz, String id) throws ServletException {
+        String srcType = AUTHZ_SRC_LDAP;
+
+        try {
+            IConfigStore authzConfig =
+                    CMS.getConfigStore().getSubStore(AUTHZ_CONFIG_STORE);
+
+            srcType = authzConfig.getString(AUTHZ_SRC_TYPE, AUTHZ_SRC_LDAP);
+        } catch (EBaseException e) {
+            CMS.debug(CMS.getLogMessage("ADMIN_SRVLT_FAIL_SRC_TYPE"));
+        }
+
+        String aclMethod = null;
+
+        if (srcType.equalsIgnoreCase(AUTHZ_SRC_XML)) {
+            CMS.debug(CMS.getLogMessage("ADMIN_SRVLT_AUTHZ_INITED", ""));
+            aclMethod = sc.getInitParameter(PROP_AUTHZ_MGR);
+            if (aclMethod != null &&
+                    aclMethod.equalsIgnoreCase(AUTHZ_MGR_BASIC)) {
+                String aclInfo = sc.getInitParameter(PROP_ACL);
+
+                if (aclInfo != null) {
+                    try {
+                        addACLInfo(authz, aclMethod, aclInfo);
+                    } catch (EBaseException ee) {
+                        throw new ServletException(
+                                "failed to init authz info from xml config file");
+                    }
+
+                    CMS.debug(CMS.getLogMessage("ADMIN_SRVLT_AUTHZ_MGR_INIT_DONE",
+                            id));
+                } else {
+                    CMS.debug(CMS.getLogMessage(
+                            "ADMIN_SRVLT_PROP_ACL_NOT_SPEC", PROP_ACL, id,
+                            AUTHZ_MGR_LDAP));
+                }
+            } else {
+                CMS.debug(CMS.getLogMessage("ADMIN_SRVLT_PROP_ACL_NOT_SPEC",
+                        PROP_AUTHZ_MGR, id, AUTHZ_MGR_LDAP));
+            }
+        } else {
+            aclMethod = AUTHZ_MGR_LDAP;
+            CMS.debug(CMS.getLogMessage("ADMIN_SRVLT_AUTH_LDAP_NOT_XML", id));
+        }
+
+        return aclMethod;
+    }
+
+    public static void addACLInfo(IAuthzSubsystem authz, String aclMethod,
+            String aclInfo) throws EBaseException {
+
+        StringTokenizer tokenizer = new StringTokenizer(aclInfo, "#");
+
+        while (tokenizer.hasMoreTokens()) {
+            String acl = (String) tokenizer.nextToken();
+
+            authz.authzMgrAccessInit(aclMethod, acl);
+        }
+    }
+}
--- a/pki/base/common/src/com/netscape/cms/servlet/profile/ProfileServlet.java
+++ b/pki/base/common/src/com/netscape/cms/servlet/profile/ProfileServlet.java
@@ -177,7 +177,7 @@
         mId = sc.getInitParameter(PROP_ID);
 
         try {
-            mAclMethod = Utils.initializeAuthz(sc, mAuthz, mId);
+            mAclMethod = ServletUtils.initializeAuthz(sc, mAuthz, mId);
         } catch (ServletException e) {
             log(ILogger.LL_FAILURE, e.toString());
             throw e;
--- a/pki/.classpath
+++ b/pki/.classpath
@@ -25,10 +25,10 @@
 	<classpathentry kind="lib" path="/usr/share/java/ldapjdk.jar"/>
 	<classpathentry kind="lib" path="/usr/share/java/idm-console-nmclf.jar"/>
 	<classpathentry kind="lib" path="/usr/lib/java/jss4.jar"/>
-	<classpathentry kind="lib" path="/usr/lib/java/osutil.jar"/>
 	<classpathentry kind="lib" path="/usr/share/java/velocity.jar"/>
 	<classpathentry kind="lib" path="/usr/share/java/servlet.jar"/>
 	<classpathentry kind="lib" path="/usr/share/java/xerces-j2.jar"/>
 	<classpathentry kind="lib" path="/usr/share/java/junit4.jar"/>
+	<classpathentry kind="lib" path="/usr/share/java/commons-codec.jar"/>
 	<classpathentry kind="output" path="build/classes"/>
 </classpath>
--- a/pki/base/CMakeLists.txt
+++ b/pki/base/CMakeLists.txt
@@ -1,7 +1,6 @@
 project(base)
 
 # The order is important!
-#   add_subdirectory(osutil)
 if (APPLICATION_FLAVOR_PKI_CORE)
     add_subdirectory(setup)
     add_subdirectory(symkey)
--- a/pki/base/ca/shared/conf/CS.cfg.in
+++ b/pki/base/ca/shared/conf/CS.cfg.in
@@ -40,6 +40,7 @@
 instanceRoot=[PKI_INSTANCE_PATH]
 machineName=[PKI_MACHINE_NAME]
 instanceId=[PKI_INSTANCE_ID]
+pidDir=[PKI_PIDDIR]
 service.machineName=[PKI_MACHINE_NAME]
 service.instanceDir=[PKI_INSTANCE_ROOT]
 service.securePort=[PKI_AGENT_SECURE_PORT]
--- a/pki/base/ca/src/CMakeLists.txt
+++ b/pki/base/ca/src/CMakeLists.txt
@@ -17,11 +17,11 @@
         ${JAVA_LIB_INSTALL_DIR}
 )
 
-find_file(OSUTIL_JAR
+find_file(COMMONS_CODEC_JAR
     NAMES
-        osutil.jar
+        commons-codec.jar
     PATHS
-        ${JAVA_LIB_INSTALL_DIR}
+        /usr/share/java
 )
 
 
@@ -42,7 +42,7 @@
     ${PKI_CERTSRV_JAR} ${PKI_CMS_JAR} ${PKI_CMSCORE_JAR}
     ${PKI_CMSUTIL_JAR} ${PKI_NSUTIL_JAR}
     ${LDAPJDK_JAR}
-    ${JSS_JAR} ${OSUTIL_JAR} ${SYMKEY_JAR})
+    ${JSS_JAR} ${COMMONS_CODEC_JAR} ${SYMKEY_JAR})
 
 
 # set version
@@ -51,7 +51,7 @@
 
 # build pki-ca.jar
 add_jar(pki-ca ${pki-ca_java_SRCS})
-add_dependencies(pki-ca osutil symkey pki-nsutil pki-cmsutil pki-certsrv pki-cms pki-cmscore)
+add_dependencies(pki-ca symkey pki-nsutil pki-cmsutil pki-certsrv pki-cms pki-cmscore)
 install_jar(pki-ca ${JAVA_JAR_INSTALL_DIR}/pki)
 set(PKI_CA_JAR ${pki-ca_JAR_FILE} CACHE INTERNAL "pki-ca jar file")
 
--- a/pki/base/ca/src/com/netscape/ca/CAService.java
+++ b/pki/base/ca/src/com/netscape/ca/CAService.java
@@ -35,6 +35,7 @@
 import com.netscape.cmscore.dbs.*;
 import com.netscape.cmscore.crmf.*;
 import com.netscape.cmscore.util.Debug;
+import com.netscape.cmsutil.util.Utils;
 
 import netscape.security.x509.*;
 import netscape.security.util.BigInt;
@@ -1621,7 +1622,7 @@
     private String hashPassword(String pwd) {
         String salt = "lala123";
         byte[] pwdDigest = mSHADigest.digest((salt + pwd).getBytes());
-        String b64E = com.netscape.osutil.OSUtil.BtoA(pwdDigest);
+        String b64E = Utils.base64encode(pwdDigest);
 
         return "{SHA}" + b64E;
     }
--- a/pki/base/common/src/com/netscape/certsrv/apps/CMS.java
+++ b/pki/base/common/src/com/netscape/certsrv/apps/CMS.java
@@ -309,8 +309,8 @@
      *
      * @return process id of the server
      */
-    public static int getpid() {
-        return _engine.getpid();
+    public static int getPID() {
+        return _engine.getPID();
     }
 
     /**
--- a/pki/base/common/src/com/netscape/certsrv/apps/ICMSEngine.java
+++ b/pki/base/common/src/com/netscape/certsrv/apps/ICMSEngine.java
@@ -92,7 +92,7 @@
      *
      * @return process id of the server
      */
-    public int getpid();
+    public int getPID();
 
     public void reinit(String id) throws EBaseException;
     public int getCSState();
--- a/pki/base/common/src/com/netscape/certsrv/base/KeyGenInfo.java
+++ b/pki/base/common/src/com/netscape/certsrv/base/KeyGenInfo.java
@@ -17,7 +17,7 @@
 // --- END COPYRIGHT BLOCK ---
 package com.netscape.certsrv.base;
 
-
+import com.netscape.cmsutil.util.Utils;
 import java.lang.*;
 import java.io.IOException;
 import netscape.security.util.*;
@@ -194,7 +194,7 @@
     private byte[] base64Decode(String spkac)
         throws  IOException {
 
-        return com.netscape.osutil.OSUtil.AtoB(spkac);
+        return Utils.base64decode(spkac);
     }
 
     private void derDecode(byte spkac[])
--- a/pki/base/common/src/com/netscape/cms/authentication/HashAuthentication.java
+++ b/pki/base/common/src/com/netscape/cms/authentication/HashAuthentication.java
@@ -203,7 +203,7 @@
     public String hashFingerprint(String host, String pageID, String uid) {
         byte[] hash = 
             mSHADigest.digest((SALT + pageID + getSecret(host) + uid).getBytes());        
-        String b64E = com.netscape.osutil.OSUtil.BtoA(hash);
+        String b64E = Utils.base64encode(hash);
 
         return "{SHA}" + b64E;
     }
--- a/pki/base/common/src/com/netscape/cms/crl/CMSIssuerAlternativeNameExtension.java
+++ b/pki/base/common/src/com/netscape/cms/crl/CMSIssuerAlternativeNameExtension.java
@@ -45,7 +45,7 @@
 import com.netscape.certsrv.dbs.crldb.*;
 import com.netscape.certsrv.logging.*;
 import com.netscape.certsrv.apps.*;
-
+import com.netscape.cmsutil.util.Utils;
 
 /**
  * This represents a issuer alternative name extension.
@@ -156,7 +156,7 @@
                         } else if (nameType.equalsIgnoreCase(PROP_OTHER_NAME)) {
 
                             try {
-                                byte[] val = com.netscape.osutil.OSUtil.AtoB(name);
+                                byte[] val = Utils.base64decode(name);
                                 DerValue derVal = new DerValue(new ByteArrayInputStream(val));
                                 GeneralName generalName = new GeneralName(derVal);
 
--- a/pki/base/common/src/com/netscape/cms/logging/LogFile.java
+++ b/pki/base/common/src/com/netscape/cms/logging/LogFile.java
@@ -148,11 +148,6 @@
     private Thread mFlushThread = null;
 
     /**
-     * The current pid for the log entries
-     */
-    protected int mPid = CMS.getpid();
-
-    /**
      * The selected log event types
      */
     protected String mSelectedEventsList = null;
@@ -1068,12 +1063,12 @@
         // This should follow the Common Log Format which still needs
         // some work.
         if (ev.getMultiline() == ILogger.L_MULTILINE) {
-            entry = mPid + "." + Thread.currentThread().getName() + " - ["
+            entry = CMS.getPID() + "." + Thread.currentThread().getName() + " - ["
                     + mLogDateFormat.format(mDate) + "] [" +
                     Integer.toString(ev.getSource()) + "] [" + Integer.toString(ev.getLevel())
                     + "] " + prepareMultiline(ev.toString());
         } else {
-            entry = mPid + "." + Thread.currentThread().getName() + " - ["
+            entry = CMS.getPID() + "." + Thread.currentThread().getName() + " - ["
                     + mLogDateFormat.format(mDate) + "] [" +
                     Integer.toString(ev.getSource()) + "] [" + Integer.toString(ev.getLevel())
                     + "] " + ev.toString();
--- a/pki/base/common/src/com/netscape/cms/policy/constraints/RenewalValidityConstraints.java
+++ b/pki/base/common/src/com/netscape/cms/policy/constraints/RenewalValidityConstraints.java
@@ -27,6 +27,7 @@
 import com.netscape.certsrv.common.*;
 import netscape.security.x509.*;
 import com.netscape.cms.policy.APolicyRule;
+import com.netscape.cmsutil.util.Utils;
 
 
 /**
@@ -330,7 +331,7 @@
             sb.append("\n");
             try {
                 byte[] ba = cert.getEncoded();
-                String encodedCert = com.netscape.osutil.OSUtil.BtoA(ba);
+                String encodedCert = Utils.base64encode(ba);
 
                 sb.append(CERT_HEADER + encodedCert + CERT_TRAILER);
             } catch (Exception e) {
--- a/pki/base/common/src/com/netscape/cms/publish/publishers/FileBasedPublisher.java
+++ b/pki/base/common/src/com/netscape/cms/publish/publishers/FileBasedPublisher.java
@@ -30,6 +30,7 @@
 import com.netscape.certsrv.ldap.*;
 import com.netscape.certsrv.publish.*;
 import org.mozilla.jss.util.Base64OutputStream;
+import com.netscape.cmsutil.util.Utils;
 
 /** 
  * This publisher writes certificate and CRL into
@@ -349,7 +350,7 @@
                 ByteArrayOutputStream os = new ByteArrayOutputStream();
 
                  fos = new FileOutputStream(tempFile);
-                fos.write(com.netscape.osutil.OSUtil.BtoA(encodedArray).getBytes());
+                fos.write(Utils.base64encode(encodedArray).getBytes());
                 fos.close();
                 destName = baseName + ".b64";
                 destFile = new File(destName);
--- a/pki/base/common/src/com/netscape/cms/servlet/admin/AdminServlet.java
+++ b/pki/base/common/src/com/netscape/cms/servlet/admin/AdminServlet.java
@@ -36,6 +36,7 @@
 import com.netscape.certsrv.usrgrp.*;
 import com.netscape.certsrv.apps.*;
 import com.netscape.cms.servlet.base.*;
+import com.netscape.cmsutil.util.Utils;
 
 
 /**
@@ -349,7 +350,7 @@
                     String authToken = req.getHeader(HDR_AUTHORIZATION);
                     String b64s = authToken.substring(
                             authToken.lastIndexOf(' ') + 1);
-                    String authCode = new String(com.netscape.osutil.OSUtil.AtoB(b64s));
+                    String authCode = new String(Utils.base64decode(b64s));
                     String userid = authCode.substring(0,
                             authCode.lastIndexOf(':'));
                     String password = authCode.substring(
--- a/pki/base/common/src/com/netscape/cms/servlet/admin/CMSAdminServlet.java
+++ b/pki/base/common/src/com/netscape/cms/servlet/admin/CMSAdminServlet.java
@@ -2612,7 +2612,7 @@
             byte[] bCert = null;
 
             try {
-                bCert = (byte[]) (com.netscape.osutil.OSUtil.AtoB(b64Cert));
+                bCert = Utils.base64decode(b64Cert);
             } catch (Exception e) {
                 CMS.debug("CMSAdminServlet: exception: " + e.toString());
             }
@@ -3679,7 +3679,7 @@
         if (rawData != null) {
             String base64Data = null;
 
-            base64Data = com.netscape.osutil.OSUtil.BtoA(rawData).trim();
+            base64Data = Utils.base64encode(rawData).trim();
 
             // extract all line separators from the "base64Data"
             for (int i = 0; i < base64Data.length(); i++) {
--- a/pki/base/common/src/com/netscape/cms/servlet/admin/UsrGrpAdminServlet.java
+++ b/pki/base/common/src/com/netscape/cms/servlet/admin/UsrGrpAdminServlet.java
@@ -1064,7 +1064,7 @@
             // Base64 decode cert
 
             try {
-                byte bCert[] = (byte[]) (com.netscape.osutil.OSUtil.AtoB(certsString));
+                byte bCert[] = Utils.base64decode(certsString);
                 X509Certificate cert = new X509CertImpl(bCert);
 
                 certs = new X509Certificate[1];
@@ -1075,7 +1075,7 @@
 
                 // could it be a pkcs7 blob?
                 CMS.debug("UsrGrpAdminServlet: " + CMS.getLogMessage("ADMIN_SRVLT_IS_PK_BLOB"));
-                byte p7Cert[] = (byte[]) (com.netscape.osutil.OSUtil.AtoB(certsString));
+                byte p7Cert[] = Utils.base64decode(certsString);
 
                 try {
                     CryptoManager manager = CryptoManager.getInstance();
--- a/pki/base/common/src/com/netscape/cms/servlet/cert/CMCRevReqServlet.java
+++ b/pki/base/common/src/com/netscape/cms/servlet/cert/CMCRevReqServlet.java
@@ -56,7 +56,7 @@
 import com.netscape.certsrv.logging.*;
 
 import com.netscape.certsrv.publish.*;
-
+import com.netscape.cmsutil.util.Utils;
 
 /**
  * Revoke a certificate with a CMC-formatted revocation request
@@ -578,7 +578,7 @@
                     String b64eCert = req.getParameter("b64eCertificate");
 
                     if (b64eCert != null) {
-                        byte[] certBytes = com.netscape.osutil.OSUtil.AtoB(b64eCert);
+                        byte[] certBytes = Utils.base64decode(b64eCert);
                         X509CertImpl cert = new X509CertImpl(certBytes);
                         IArgBlock rarg = CMS.createArgBlock();
 
--- a/pki/base/common/src/com/netscape/cms/servlet/cert/ChallengeRevocationServlet1.java
+++ b/pki/base/common/src/com/netscape/cms/servlet/cert/ChallengeRevocationServlet1.java
@@ -49,7 +49,7 @@
 import com.netscape.certsrv.authentication.*;
 import com.netscape.certsrv.logging.*;
 import com.netscape.certsrv.publish.*;
-
+import com.netscape.cmsutil.util.Utils;
 
 /**
  * Takes the certificate info (serial number) and optional challenge phrase, creates a 
@@ -411,7 +411,7 @@
                     String b64eCert = req.getParameter("b64eCertificate");
 
                     if (b64eCert != null) {
-                        byte[] certBytes = com.netscape.osutil.OSUtil.AtoB(b64eCert);
+                        byte[] certBytes = Utils.base64decode(b64eCert);
                         X509CertImpl cert = new X509CertImpl(certBytes);
                         IArgBlock rarg = CMS.createArgBlock();
 
--- a/pki/base/common/src/com/netscape/cms/servlet/cert/DisplayBySerial.java
+++ b/pki/base/common/src/com/netscape/cms/servlet/cert/DisplayBySerial.java
@@ -48,7 +48,7 @@
 import com.netscape.certsrv.authentication.*;
 import com.netscape.certsrv.authorization.*;
 import com.netscape.cms.servlet.*;
-
+import com.netscape.cmsutil.util.Utils;
 
 /**
  * Display detailed information about a certificate
@@ -356,7 +356,7 @@
             byte[] ba = cert.getEncoded();
             // Do base 64 encoding
 
-            header.addStringValue("certChainBase64", com.netscape.osutil.OSUtil.BtoA(ba));
+            header.addStringValue("certChainBase64", Utils.base64encode(ba));
             header.addStringValue("serialNumber", seq.toString(16));
 
             /*
@@ -401,7 +401,7 @@
                 p7.encodeSignedData(bos,false);
                 byte[] p7Bytes = bos.toByteArray();
 
-				p7Str = com.netscape.osutil.OSUtil.BtoA(p7Bytes);
+				p7Str = Utils.base64encode(p7Bytes);
                 header.addStringValue("pkcs7ChainBase64", p7Str);
             } catch (Exception e) {
                 //p7Str = "PKCS#7 B64 Encoding error - " + e.toString() 
--- a/pki/base/common/src/com/netscape/cms/servlet/cert/DisplayCRL.java
+++ b/pki/base/common/src/com/netscape/cms/servlet/cert/DisplayCRL.java
@@ -43,7 +43,7 @@
 import com.netscape.certsrv.authorization.*;
 
 import com.netscape.cms.servlet.*;
-
+import com.netscape.cmsutil.util.Utils;
 
 /**
  * Decode the CRL and display it to the requester.
@@ -336,7 +336,7 @@
             } else if (crlDisplayType.equals("base64Encoded")) {
                 try {
                     byte[] ba = crl.getEncoded();
-                    String crlBase64Encoded = com.netscape.osutil.OSUtil.BtoA(ba);
+                    String crlBase64Encoded = Utils.base64encode(ba);
                     int length = crlBase64Encoded.length();
                     int i = 0;
                     int j = 0;
@@ -408,7 +408,7 @@
 
                                 try {
                                     byte[] ba = deltaCRL.getEncoded();
-                                    String crlBase64Encoded = com.netscape.osutil.OSUtil.BtoA(ba);
+                                    String crlBase64Encoded = Utils.base64encode(ba);
                                     int length = crlBase64Encoded.length();
                                     int i = 0;
                                     int j = 0;
--- a/pki/base/common/src/com/netscape/cms/servlet/cert/EnrollServlet.java
+++ b/pki/base/common/src/com/netscape/cms/servlet/cert/EnrollServlet.java
@@ -66,7 +66,7 @@
 import com.netscape.certsrv.ca.*;
 import com.netscape.certsrv.dbs.certdb.*;
 import java.math.*;
-
+import com.netscape.cmsutil.util.Utils;
 
 /**
  * Submit a Certificate Enrollment request
@@ -1803,7 +1803,7 @@
         if (rawData != null) {
             String base64Data = null;
 
-            base64Data = com.netscape.osutil.OSUtil.BtoA(rawData).trim();
+            base64Data = Utils.base64encode(rawData).trim();
 
             StringBuffer sb = new StringBuffer();
             // extract all line separators from the "base64Data"
--- a/pki/base/common/src/com/netscape/cms/servlet/cert/GetCRL.java
+++ b/pki/base/common/src/com/netscape/cms/servlet/cert/GetCRL.java
@@ -46,7 +46,7 @@
 import com.netscape.certsrv.authentication.*;
 import com.netscape.certsrv.authorization.*;
 import com.netscape.cms.servlet.*;
-
+import com.netscape.cmsutil.util.Utils;
 
 /**
  * Retrieve CRL for a Certificate Authority
@@ -336,7 +336,7 @@
                 } else if (crlDisplayType.equals("base64Encoded")) {
                     try {
                         byte[] ba = crl.getEncoded();
-                        String crlBase64Encoded = com.netscape.osutil.OSUtil.BtoA(ba);
+                        String crlBase64Encoded = Utils.base64encode(ba);
                         int length = crlBase64Encoded.length();
                         int i = 0;
                         int j = 0;
@@ -376,7 +376,7 @@
 
                     try {
                         byte[] ba = crl.getEncoded();
-                        String crlBase64Encoded = com.netscape.osutil.OSUtil.BtoA(ba);
+                        String crlBase64Encoded = Utils.base64encode(ba);
                         int length = crlBase64Encoded.length();
                         int i = 0;
                         int j = 0;
--- a/pki/base/common/src/com/netscape/cms/servlet/cert/ImportCertsTemplateFiller.java
+++ b/pki/base/common/src/com/netscape/cms/servlet/cert/ImportCertsTemplateFiller.java
@@ -20,7 +20,8 @@
 
 import com.netscape.cms.servlet.common.*;
 import com.netscape.cms.servlet.base.*;
- 
+import com.netscape.cmsutil.util.Utils;
+
 import java.util.Locale;
 import java.math.BigInteger;
 import java.io.ByteArrayOutputStream;
@@ -343,7 +344,7 @@
 
             certRepContent.encode(certRepOut);
             byte[] certRepBytes = certRepOut.toByteArray();
-            String certRepB64 = com.netscape.osutil.OSUtil.BtoA(certRepBytes);
+            String certRepB64 = Utils.base64encode(certRepBytes);
             // add CR to each return as required by cartman
             BufferedReader certRepB64lines = 
                 new BufferedReader(new StringReader(certRepB64));
--- a/pki/base/common/src/com/netscape/cms/servlet/cert/RevocationServlet.java
+++ b/pki/base/common/src/com/netscape/cms/servlet/cert/RevocationServlet.java
@@ -20,6 +20,7 @@
 
 import com.netscape.cms.servlet.common.*;
 import com.netscape.cms.servlet.base.*;
+import com.netscape.cmsutil.util.Utils;
 
 import java.util.Enumeration;
 import java.util.Locale;
@@ -273,7 +274,7 @@
                 byte[] ba = old_cert.getEncoded();
                 // Do base 64 encoding
 
-                header.addStringValue("b64eCertificate", com.netscape.osutil.OSUtil.BtoA(ba));
+                header.addStringValue("b64eCertificate", Utils.base64encode(ba));
             } catch (CertificateEncodingException e) {
             }
         }
--- a/pki/base/common/src/com/netscape/cms/servlet/cert/scep/CRSEnrollment.java
+++ b/pki/base/common/src/com/netscape/cms/servlet/cert/scep/CRSEnrollment.java
@@ -49,6 +49,7 @@
 import org.mozilla.jss.crypto.*;
 import org.mozilla.jss.pkix.cert.Certificate;
 import com.netscape.cmsutil.scep.CRSPKIMessage;
+import com.netscape.cmsutil.util.Utils;
 
 
 /**
@@ -518,7 +519,7 @@
       byte[] response=null;
       String responseData = "";
         
-      decodedPKIMessage = com.netscape.osutil.OSUtil.AtoB(msg);
+      decodedPKIMessage = Utils.base64decode(msg);
             
       try {
           ByteArrayInputStream is = new ByteArrayInputStream(decodedPKIMessage);
@@ -764,7 +765,7 @@
       byte[] response=null;
       X509CertImpl cert = null;
         
-      decodedPKIMessage = com.netscape.osutil.OSUtil.AtoB(msg);
+      decodedPKIMessage = Utils.base64decode(msg);
             
       try {
           ByteArrayInputStream is = new ByteArrayInputStream(decodedPKIMessage);
@@ -1791,7 +1792,7 @@
    protected String hashPassword(String pwd) {
         String salt = "lala123";
         byte[] pwdDigest = mSHADigest.digest((salt+pwd).getBytes());
-        String b64E = com.netscape.osutil.OSUtil.BtoA(pwdDigest);
+        String b64E = Utils.base64encode(pwdDigest);
         return "{SHA}"+b64E;
     }
 
--- a/pki/base/common/src/com/netscape/cms/servlet/connector/ConnectorServlet.java
+++ b/pki/base/common/src/com/netscape/cms/servlet/connector/ConnectorServlet.java
@@ -19,6 +19,7 @@
 
 import com.netscape.cms.servlet.common.*;
 import com.netscape.cms.servlet.base.*;
+import com.netscape.cmsutil.util.Utils;
 
 import javax.servlet.*;
 import javax.servlet.http.*;
@@ -1064,7 +1065,7 @@
         if (rawData != null) {
             String base64Data = null;
 
-            base64Data = com.netscape.osutil.OSUtil.BtoA(rawData).trim();
+            base64Data = Utils.base64encode(rawData).trim();
 
             StringBuffer sb = new StringBuffer();
             // extract all line separators from the "base64Data"
--- a/pki/base/common/src/com/netscape/cms/servlet/csadmin/RegisterUser.java
+++ b/pki/base/common/src/com/netscape/cms/servlet/csadmin/RegisterUser.java
@@ -20,6 +20,7 @@
 
 import com.netscape.cms.servlet.common.*;
 import com.netscape.cms.servlet.base.*;
+import com.netscape.cmsutil.util.Utils;
 import java.io.*;
 import java.util.*;
 import javax.servlet.*;
@@ -163,7 +164,7 @@
 
           byte bCert[] = null;
           X509CertImpl cert = null;
-          bCert = (byte[]) (com.netscape.osutil.OSUtil.AtoB(certsString));
+          bCert = Utils.base64decode(certsString);
           cert = new X509CertImpl(bCert);
           certs[0] = (X509Certificate)cert;
 
--- a/pki/base/common/src/com/netscape/cms/servlet/ocsp/OCSPServlet.java
+++ b/pki/base/common/src/com/netscape/cms/servlet/ocsp/OCSPServlet.java
@@ -52,7 +52,7 @@
 import com.netscape.certsrv.authorization.*;
 import com.netscape.cmsutil.ocsp.*;
 import com.netscape.certsrv.base.*;
-
+import com.netscape.cmsutil.util.Utils;
 
 /**
  * Process OCSP messages, According to RFC 2560
@@ -178,7 +178,7 @@
                   throw new Exception("OCSPServlet: OCSP request not provided in GET method");
               }
               is = new ByteArrayInputStream(
-                com.netscape.osutil.OSUtil.AtoB(pathInfo.substring(1)));
+                Utils.base64decode(pathInfo.substring(1)));
             }
 
             // (1) retrieve OCSP request
--- a/pki/base/common/src/com/netscape/cms/servlet/profile/ProfileProcessServlet.java
+++ b/pki/base/common/src/com/netscape/cms/servlet/profile/ProfileProcessServlet.java
@@ -35,6 +35,7 @@
 import com.netscape.certsrv.logging.*;
 import com.netscape.certsrv.ca.*;
 import com.netscape.cms.servlet.common.*;
+import com.netscape.cmsutil.util.Utils;
 
 import java.security.cert.*;
 import netscape.security.x509.*;
@@ -908,7 +909,7 @@
         if (rawData != null) {
             String base64Data = null;
 
-            base64Data = com.netscape.osutil.OSUtil.BtoA(rawData).trim();
+            base64Data = Utils.base64encode(rawData).trim();
 
             // extract all line separators from the "base64Data"
             StringBuffer sb = new StringBuffer();
--- a/pki/base/common/src/com/netscape/cms/servlet/profile/ProfileSubmitCMCServlet.java
+++ b/pki/base/common/src/com/netscape/cms/servlet/profile/ProfileSubmitCMCServlet.java
@@ -38,7 +38,7 @@
 import org.mozilla.jss.pkix.cmc.*;
 
 import netscape.security.x509.*;
-
+import com.netscape.cmsutil.util.Utils;
 
 /**
  * This servlet submits end-user request into the profile framework.
@@ -229,7 +229,7 @@
             }
         }
 
-        requestB64 = com.netscape.osutil.OSUtil.BtoA(reqbuf);
+        requestB64 = Utils.base64encode(reqbuf);
 
         if (CMS.debugOn()) {
             CMS.debug("Start of ProfileSubmitCMCServlet Input Parameters");
@@ -850,7 +850,7 @@
         if (rawData != null) {
             String base64Data = null;
 
-            base64Data = com.netscape.osutil.OSUtil.BtoA(rawData).trim();
+            base64Data = Utils.base64encode(rawData).trim();
 
             // extract all line separators from the "base64Data"
             StringBuffer sb = new StringBuffer();
--- a/pki/base/common/src/com/netscape/cms/servlet/profile/ProfileSubmitServlet.java
+++ b/pki/base/common/src/com/netscape/cms/servlet/profile/ProfileSubmitServlet.java
@@ -1566,7 +1566,7 @@
         if (rawData != null) {
             String base64Data = null;
 
-            base64Data = com.netscape.osutil.OSUtil.BtoA(rawData).trim();
+            base64Data = Utils.base64encode(rawData).trim();
 
             // extract all line separators from the "base64Data"
             StringBuffer sb = new StringBuffer();
--- a/pki/base/common/src/com/netscape/cms/servlet/request/ProcessCertReq.java
+++ b/pki/base/common/src/com/netscape/cms/servlet/request/ProcessCertReq.java
@@ -44,7 +44,7 @@
 import com.netscape.certsrv.usrgrp.*;
 import com.netscape.certsrv.common.*;
 import com.netscape.certsrv.logging.*;
-
+import com.netscape.cmsutil.util.Utils;
 
 /**
  * Agent operations on Certificate requests. This servlet is used
@@ -596,7 +596,7 @@
                             if (addExts != null && !addExts.trim().equals("")) {
                                 Vector extsToBeAdded = new Vector();
 
-                                byte[] b = (byte[]) (com.netscape.osutil.OSUtil.AtoB(addExts));
+                                byte[] b = Utils.base64decode(addExts);
 
                                 // this b can be "Extension" Or "SEQUENCE OF Extension"
                                 try {
@@ -1823,7 +1823,7 @@
         if (rawData != null) {
             String base64Data = null;
 
-            base64Data = com.netscape.osutil.OSUtil.BtoA(rawData).trim();
+            base64Data = Utils.base64encode(rawData).trim();
 
             // extract all line separators from the "base64Data"
             StringBuffer sb = new StringBuffer();
--- a/pki/base/common/src/com/netscape/cmscore/apps/CMSEngine.java
+++ b/pki/base/common/src/com/netscape/cmscore/apps/CMSEngine.java
@@ -84,7 +84,6 @@
 import com.netscape.cmscore.logging.LogSubsystem;
 import com.netscape.cmscore.logging.Logger;
 import com.netscape.cmscore.logging.SignedAuditLogger;
-import com.netscape.cmscore.util.OsSubsystem;
 import com.netscape.cmscore.security.JssSubsystem;
 import com.netscape.cmscore.dbs.DBSubsystem;
 import com.netscape.cmscore.dbs.*;
@@ -93,7 +92,7 @@
 import com.netscape.cmscore.usrgrp.UGSubsystem;
 import com.netscape.cmscore.request.RequestSubsystem;
 import com.netscape.cmscore.jobs.JobsScheduler;
-import com.netscape.osutil.*;
+import com.netscape.cmsutil.util.Utils;
 
 import com.netscape.cmscore.cert.OidLoaderSubsystem;
 import com.netscape.cmscore.cert.X500NameSubsystem;
@@ -117,8 +116,10 @@
 
     public static final SubsystemRegistry mSSReg = SubsystemRegistry.getInstance();
 
-    public static String instanceDir;    /* path to instance <server-root>/cert-<instance-name> */
-  
+    public String instanceDir; /* path to instance <server-root>/cert-<instance-name> */
+    private String instanceId;
+    private int pid;
+
     private IConfigStore mConfig = null; 
     private ISubsystem mOwner = null; 
     private long mStartupTime = 0;
@@ -139,8 +140,6 @@
             new SubsystemInfo(LogSubsystem.ID, 
                 LogSubsystem.getInstance()),
             new SubsystemInfo( 
-                OsSubsystem.ID, OsSubsystem.getInstance()),
-            new SubsystemInfo( 
                 JssSubsystem.ID, JssSubsystem.getInstance()),
             new SubsystemInfo( 
                 DBSubsystem.ID, DBSubsystem.getInstance()),
@@ -191,6 +190,22 @@
      * private constructor.
      */
     public CMSEngine() {
+
+        // Shutdown on SIGINT, SIGTERM, or SIGHUP.
+        Runtime.getRuntime().addShutdownHook(new Thread() {
+            public void run() {
+                /*LogDoc
+                *
+                * @phase watchdog check
+                */
+                getLogger().log(ILogger.EV_SYSTEM,
+                        ILogger.S_OTHER,
+                        ILogger.LL_INFO,
+                        "OS: Received shutdown signal");
+
+                shutdown();
+            };
+        });
     }
 
     /**
@@ -293,6 +308,7 @@
         }
 
         instanceDir = config.getString("instanceRoot");
+        instanceId = config.getString("instanceId");
 
         loadDynSubsystems();
 
@@ -896,7 +912,6 @@
      * @exception EBaseException if any subsystem fails to startup.
      */
     public void startup() throws EBaseException {
-        //OsSubsystem.nativeExit(0);
         startupSubsystems(mStaticSubsystems);
         if (mDynSubsystems != null)
             startupSubsystems(mDynSubsystems);
@@ -1329,11 +1344,11 @@
     }
 
     public String BtoA(byte data[]) {
-        return OSUtil.BtoA(data);
+        return Utils.base64encode(data);
     }
 
     public byte[] AtoB(String data) {
-        return OSUtil.AtoB(data);
+        return Utils.base64decode(data);
     }
 
     public String getEncodedCert(X509Certificate cert) {
@@ -1486,7 +1501,7 @@
         return (File.separator.equals("\\"));
     }
 
-    private static void shutdownHttpServer() {
+    private void shutdownHttpServer() {
 
         try {
             String cmds[] = null;
@@ -1641,8 +1656,31 @@
         return new PWCBsdr();
     }
 
-    public int getpid() {
-        return OsSubsystem.getpid();
+    public int getPID() {
+        if (pid != 0) return pid;
+
+        BufferedReader bf = null;
+        try {
+            // PID file is be created by wrapper script (e.g. /usr/sbin/tomcat6)
+            String dir = mConfig.getString("pidDir");
+            String name = dir+File.separator+instanceId+".pid";
+
+            if (dir == null) return pid;
+            File file = new File(name);
+            if (!file.exists()) return pid;
+
+            bf = new BufferedReader(new FileReader(file));
+            String value = bf.readLine();
+            pid = Integer.parseInt(value);
+
+        } catch (Exception e) {
+            e.printStackTrace();
+
+        } finally {
+            if (bf != null) try { bf.close(); } catch (Exception e) { e.printStackTrace(); }
+        }
+
+        return pid;
     }
 
     public Date getCurrentDate() {
--- a/pki/base/common/src/com/netscape/cmscore/apps/Upgrade.java
+++ b/pki/base/common/src/com/netscape/cmscore/apps/Upgrade.java
@@ -28,7 +28,7 @@
 import org.mozilla.jss.util.ConsolePasswordCallback;
 import java.io.File;
 import java.lang.*;
-
+import com.netscape.cmsutil.util.Utils;
 
 public final class Upgrade {
     public static void perform422to45(IConfigStore c)
@@ -130,7 +130,7 @@
         c.putString("log.instance.System.type", 
             "system");
 
-        if (!OsSubsystem.isUnix()) {
+        if (Utils.isNT()) {
             c.putString("log.impl.NTEventLog.class",
                 "com.netscape.certsrv.logging.NTEventLog");
 
--- a/pki/base/common/src/com/netscape/cmscore/authentication/ChallengePhraseAuthentication.java
+++ b/pki/base/common/src/com/netscape/cmscore/authentication/ChallengePhraseAuthentication.java
@@ -35,7 +35,7 @@
 import com.netscape.certsrv.apps.*;
 import com.netscape.cmscore.dbs.*;
 import com.netscape.cmscore.util.*;
-
+import com.netscape.cmsutil.util.Utils;
 
 /**
  * Challenge phrase based authentication.
@@ -401,7 +401,7 @@
     private String hashPassword(String pwd) {
         String salt = "lala123";
         byte[] pwdDigest = mSHADigest.digest((salt + pwd).getBytes());
-        String b64E = com.netscape.osutil.OSUtil.BtoA(pwdDigest);
+        String b64E = Utils.base64encode(pwdDigest);
 
         return "{SHA}" + b64E;
     }
--- a/pki/base/common/src/com/netscape/cmscore/base/ArgBlock.java
+++ b/pki/base/common/src/com/netscape/cmscore/base/ArgBlock.java
@@ -25,7 +25,7 @@
 import java.math.BigInteger;
 import com.netscape.certsrv.base.*;
 import com.netscape.certsrv.apps.CMS;
-
+import com.netscape.cmsutil.util.Utils;
 
 /**
  * This class represents a set of indexed arguments. 
@@ -693,7 +693,7 @@
         PKCS10 pkcs10 = null;
 
         try {
-            byte[] decodedBytes = com.netscape.osutil.OSUtil.AtoB(base64Request);
+            byte[] decodedBytes = Utils.base64decode(base64Request);
 
             pkcs10 = new PKCS10(decodedBytes);
         } catch (NoSuchProviderException e) { 
--- a/pki/base/common/src/com/netscape/cmscore/base/PropConfigStore.java
+++ b/pki/base/common/src/com/netscape/cmscore/base/PropConfigStore.java
@@ -24,7 +24,7 @@
 import org.mozilla.jss.util.Base64OutputStream;
 import com.netscape.certsrv.base.*;
 import com.netscape.certsrv.apps.CMS;
-
+import com.netscape.cmsutil.util.Utils;
 
 /**
  * A class represents a in-memory configuration store.
@@ -326,7 +326,7 @@
             else {
 				CMS.traceHashKey(mDebugType,getFullName(name),
 					"<bytearray>","<bytearray>");
-                return com.netscape.osutil.OSUtil.AtoB(str);
+                return Utils.base64decode(str);
 			}
     }
 
--- a/pki/base/common/src/com/netscape/cmscore/cert/CertUtils.java
+++ b/pki/base/common/src/com/netscape/cmscore/cert/CertUtils.java
@@ -26,7 +26,7 @@
 import netscape.security.extensions.*;
 import netscape.security.util.*;
 import com.netscape.cmscore.util.*;
-import com.netscape.osutil.*;
+import com.netscape.cmsutil.util.Utils;
 import com.netscape.certsrv.base.*;
 import com.netscape.certsrv.apps.CMS;
 import com.netscape.certsrv.logging.ILogger;
@@ -135,7 +135,7 @@
         PKCS10 pkcs10 = null;
 
         try {
-            byte[] decodedBytes = com.netscape.osutil.OSUtil.AtoB(normalized);
+            byte[] decodedBytes = Utils.base64decode(normalized);
 
             pkcs10 = new PKCS10(decodedBytes);
         } catch (Exception e) {
@@ -525,7 +525,7 @@
         try {
             return 
                 "-----BEGIN CERTIFICATE-----\n" +
-                com.netscape.osutil.OSUtil.BtoA(cert.getEncoded()) +
+                Utils.base64encode(cert.getEncoded()) +
                 "-----END CERTIFICATE-----\n";
         } catch (CertificateException e) {
         }
@@ -536,7 +536,7 @@
         throws IOException {
         mime64 = stripCertBrackets(mime64.trim());
         String newval = normalizeCertStr(mime64);
-        byte rawPub[] = com.netscape.osutil.OSUtil.AtoB(newval);
+        byte rawPub[] = Utils.base64decode(newval);
         X509Certificate cert = null;
 
         try {
@@ -550,7 +550,7 @@
         throws IOException {
         mime64 = stripCertBrackets(mime64.trim());
         String newval = normalizeCertStr(mime64);
-        byte rawPub[] = com.netscape.osutil.OSUtil.AtoB(newval);
+        byte rawPub[] = Utils.base64decode(newval);
         PKCS7 p7 = null;
 
         try {
@@ -565,7 +565,7 @@
         throws IOException {
         mime64 = stripCRLBrackets(mime64.trim());
         String newval = normalizeCertStr(mime64);
-        byte rawPub[] = com.netscape.osutil.OSUtil.AtoB(newval);
+        byte rawPub[] = Utils.base64decode(newval);
         X509CRL crl = null;
 
         try {
@@ -578,7 +578,7 @@
     public static X509CRL mapCRL1(String mime64) 
         throws IOException {
         mime64 = stripCRLBrackets(mime64.trim());
-        byte rawPub[] = OSUtil.AtoB(mime64);
+        byte rawPub[] = Utils.base64decode(mime64);
         X509CRL crl = null;
 
         try {
--- a/pki/base/common/src/com/netscape/cmscore/connector/HttpRequestEncoder.java
+++ b/pki/base/common/src/com/netscape/cmscore/connector/HttpRequestEncoder.java
@@ -21,6 +21,7 @@
 import com.netscape.certsrv.request.*;
 import com.netscape.certsrv.connector.*;
 import com.netscape.cmscore.util.Debug;
+import com.netscape.cmsutil.util.Utils;
 
 import java.io.*;
 
@@ -38,7 +39,7 @@
 
         os.writeObject(r);
         serial = ba.toByteArray();
-        s = com.netscape.osutil.OSUtil.BtoA(serial);
+        s = Utils.base64encode(serial);
         return s;
     }
 
@@ -49,7 +50,7 @@
 
         try {
 
-            serial = com.netscape.osutil.OSUtil.AtoB(s);
+            serial = Utils.base64decode(s);
             ByteArrayInputStream ba = new ByteArrayInputStream(serial);
             ObjectInputStream is = new ObjectInputStream(ba);
 
--- a/pki/base/common/src/com/netscape/cmscore/policy/GeneralNameUtil.java
+++ b/pki/base/common/src/com/netscape/cmscore/policy/GeneralNameUtil.java
@@ -29,6 +29,7 @@
 import com.netscape.certsrv.base.*;
 import com.netscape.certsrv.policy.*;
 import com.netscape.cmscore.util.Debug;
+import com.netscape.cmsutil.util.Utils;
 
 
 /** 
@@ -82,7 +83,7 @@
 
         try {
             if (generalNameChoice.equalsIgnoreCase(GENNAME_CHOICE_OTHERNAME)) {
-                byte[] val = com.netscape.osutil.OSUtil.AtoB(value);
+                byte[] val = Utils.base64decode(value);
 
                 derVal = new DerValue(new ByteArrayInputStream(val));
                 Debug.trace("otherName formed");
--- a/pki/base/common/src/com/netscape/cmscore/security/JssSubsystem.java
+++ b/pki/base/common/src/com/netscape/cmscore/security/JssSubsystem.java
@@ -54,7 +54,7 @@
 import com.netscape.cmscore.util.Debug;
 import netscape.ldap.util.*;
 import com.netscape.cmsutil.crypto.*;
-
+import com.netscape.cmsutil.util.Utils;
 
 /**
  * Subsystem for initializing JSS>
@@ -1614,7 +1614,7 @@
             DN dn = new DN(principal.getName());
             BigInteger serialno = cert.getSerialNumber();
             String suffix = "." + System.currentTimeMillis();
-            String b64E = com.netscape.osutil.OSUtil.BtoA(cert.getEncoded());
+            String b64E = Utils.base64encode(cert.getEncoded());
             PrintStream stream = new PrintStream(new FileOutputStream(pathname + suffix));
 
             stream.println("-----BEGIN CERTIFICATE-----");
@@ -1975,7 +1975,7 @@
                 String content = "";
                 String noHeader = CertUtils.stripCertBrackets(b64E);
                 String normalized = CertUtils.normalizeCertStr(noHeader);
-                byte data[] = com.netscape.osutil.OSUtil.AtoB(normalized);
+                byte data[] = Utils.base64decode(normalized);
 
                 ContentInfo ci = (ContentInfo)
                     ASN1Util.decode(ContentInfo.getTemplate(), data);
--- a/pki/base/common/src/com/netscape/cmscore/security/KeyCertUtil.java
+++ b/pki/base/common/src/com/netscape/cmscore/security/KeyCertUtil.java
@@ -60,7 +60,7 @@
 import com.netscape.cmscore.util.*;
 import com.netscape.cmscore.dbs.*;
 import com.netscape.cmsutil.crypto.*;
-
+import com.netscape.cmsutil.util.Utils;
 
 /**
  * This class provides all the base methods to generate the key for different
@@ -83,7 +83,7 @@
         if (ext != null) {
             try {
 
-                b = (byte[]) (com.netscape.osutil.OSUtil.AtoB(ext));
+                b = Utils.base64decode(ext);
                 // this b can be "Extension" Or "SEQUENCE OF Extension"
                 DerValue b_der = new DerValue(b);
 
@@ -708,7 +708,7 @@
     public static byte[] convertB64EToByteArray(String b64E)
         throws CertificateException, IOException {
         String str = CertUtils.stripCertBrackets(b64E);
-        byte bCert[] = (byte[]) (com.netscape.osutil.OSUtil.AtoB(str));
+        byte bCert[] = Utils.base64decode(str);
 
         /*
          java.security.cert.X509Certificate cert = 
@@ -751,7 +751,7 @@
         String b64E = properties.getDerExtension();
 
         if (b64E != null) {
-            byte[] b = (byte[]) (com.netscape.osutil.OSUtil.AtoB(b64E));
+            byte[] b = Utils.base64decode(b64E);
 
             // this b can be "Extension" Or "SEQUENCE OF Extension"
             try {
--- a/pki/base/common/src/com/netscape/cmscore/security/PWsdrCache.java
+++ b/pki/base/common/src/com/netscape/cmscore/security/PWsdrCache.java
@@ -180,7 +180,7 @@
     }
 
     public byte[] base64Decode(String s) throws IOException {
-         byte[] d = com.netscape.osutil.OSUtil.AtoB(s);
+         byte[] d = Utils.base64decode(s);
          return d;
     }
 
--- a/pki/base/common/src/com/netscape/cmscore/util/OsSubsystem.java
+++ /dev/null
@@ -1,488 +0,0 @@
-// --- BEGIN COPYRIGHT BLOCK ---
-// This program is free software; you can redistribute it and/or modify
-// it under the terms of the GNU General Public License as published by
-// the Free Software Foundation; version 2 of the License.
-//
-// This program is distributed in the hope that it will be useful,
-// but WITHOUT ANY WARRANTY; without even the implied warranty of
-// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
-// GNU General Public License for more details.
-//
-// You should have received a copy of the GNU General Public License along
-// with this program; if not, write to the Free Software Foundation, Inc.,
-// 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
-//
-// (C) 2007 Red Hat, Inc.
-// All rights reserved.
-// --- END COPYRIGHT BLOCK ---
-package com.netscape.cmscore.util;
-
-
-import java.io.*;
-import java.util.*;
-import com.netscape.certsrv.logging.*;
-import com.netscape.certsrv.base.*;
-import com.netscape.certsrv.base.ISubsystem;
-import com.netscape.certsrv.base.IConfigStore;
-import com.netscape.certsrv.base.EBaseException;
-import com.netscape.certsrv.apps.*;
-import com.netscape.cmscore.base.*;
-import com.netscape.osutil.*;
-
-
-/**
- * This object contains the OS independent interfaces.  It's currently
- * used for Unix signal and user handling, but could eventually be extended
- * for NT interfaces.
- * <P>
- *
- * @author mikep
- * @version $Revision$, $Date$
- */
-public final class OsSubsystem implements ISubsystem {
-
-    public static final String ID = "os";
-    protected IConfigStore mConfig;
-    protected String mInstanceDir;
-    protected ISubsystem mOwner;
-    protected ILogger mLogger = null;
-    protected static SignalThread mSignalThread = null;
-
-    private static final String PROP_OS = "os";
-    private static final String PROP_USERID = "userid";
-
-    // singleton enforcement
-
-    private static OsSubsystem mInstance = new OsSubsystem();
-
-    public static OsSubsystem getInstance() {
-        return mInstance;
-    }
-
-    // end singleton enforcement.
-
-    /**
-     * Constructor for an OS subsystem
-     */
-    private OsSubsystem() {
-    }
-
-    /**
-     * Retrieves subsystem name.
-     */
-    public String getId() {
-        return ID;
-    }
-
-    public void setId(String id) throws EBaseException {
-        throw new EBaseException(CMS.getUserMessage("CMS_BASE_INVALID_OPERATION"));
-    }
-
-    /**
-     * Initializes this subsystem with the given configuration
-     * store.
-     * <P>
-     *
-     * @param owner owner of this subsystem
-     * @param config configuration store
-     * @exception EBaseException failed to initialize
-     */
-    public void init(ISubsystem owner, IConfigStore config)
-        throws EBaseException {
-
-        mOwner = owner;
-        mConfig = config;
-        mLogger = CMS.getLogger();
-
-        mInstanceDir = CMS.getConfigStore().getString("instanceRoot");
-
-        // We currently only deal with Unix and NT
-        if (isUnix()) {
-            //initUnix();
-        } else {
-            initNT();
-        }
-        try {
-            //System.out.println(" The dir I'm seeing is " + mInstanceDir);
-            String pidName = mInstanceDir + File.separator + "config" + File.separator + "cert-pid";
-            BufferedWriter pidOut = new BufferedWriter(new FileWriter(pidName));
-            int pid = OsSubsystem.getpid();
-
-            pidOut.write(Integer.toString(pid));
-            pidOut.close();
-            OSUtil.getFileWriteLock(pidName);
-        } catch (Exception e) {
-            //XX to stderr XXXXXX
-            //e.printStackTrace();
-        }
-    }
-
-    /**
-     * Starts up OS
-     */
-    public void startup() throws EBaseException {
-        if (isUnix()) {
-            String pf = mConfig.getString("pidFile", null);
-
-            if (pf == null) {
-                return; // development environment does not rely on this
-            }
-            // dont ever call detach in Java environment,
-            // it does a fork()
-            // LibC.detach();
-
-            // need to do pid here, pid will be changed after detach
-            int pid = LibC.getpid();
-            String pidStr = Integer.toString(pid);
-
-            try {
-                FileOutputStream fos = new FileOutputStream(pf);
-
-                fos.write(pidStr.getBytes());
-                fos.close();
-            } catch (IOException e) {
-
-                /*LogDoc
-                 *
-                 * @phase start OS subsystem
-                 * @message OS: <exception thrown>
-                 */
-                mLogger.log(ILogger.EV_SYSTEM, ILogger.S_OTHER,
-                    ILogger.LL_FAILURE, "OS: " + e.toString());
-            }
-        }
-    }
-
-    /**
-     * Returns the process ID of the Certificate Server process. Works
-     * on Unix and NT.
-     */
-    public static int getpid() {
-        if (isUnix()) {
-            return LibC.getpid();
-        } else {
-            return OSUtil.getNTpid();
-        }
-    }
-
-    /**
-     * Hooks up unix signals.
-     */
-    private void initUnix() throws EBaseException {
-        // Set up signal handling.  We pretty much exit on anything
-        // Signal.watch(Signal.SIGHUP); 
-        // Signal.watch(Signal.SIGTERM);
-        // Signal.watch(Signal.SIGINT);
-        // mSignalThread = new SignalThread();
-        // mSignalThread.setDaemon(true);
-        // mSignalThread.start();
-
-        Signal.addSignalListener(Signal.SIGHUP, new SIGHUPListener(this)); 
-        Signal.addSignalListener(Signal.SIGTERM, new SIGTERMListener(this)); 
-        Signal.addSignalListener(Signal.SIGINT, new SIGINTListener(this)); 
-
-        /* Increase the maximum number of file descriptors */
-        int i = mConfig.getInteger("maxFiles", 
-                ResourceLimit.getHardLimit(ResourceLimit.RLIMIT_NOFILE));
-
-        ResourceLimit.setLimits(ResourceLimit.RLIMIT_NOFILE,
-            i, ResourceLimit.getHardLimit(ResourceLimit.RLIMIT_NOFILE));
-
-        // write current pid to specified file
-        String pf = mConfig.getString("pidFile", null);
-
-        if (pf == null) {
-            return; // development environment does not rely on this
-        }
-        File pidFile = new File(pf);
-
-        if (pidFile.exists()) {
-            throw new EBaseException(CMS.getUserMessage("CMS_BASE_PID_EXIST"));
-        }
-    }
-
-    /**
-     * Used to change the process user id usually called after the appropriate 
-     * network ports have been opened.
-     */
-    public void setUserId() throws EBaseException {
-        if (!isUnix())
-            return;
-
-        String userid;
-
-        userid = mConfig.getString(PROP_USERID, null);
-        String id = String.valueOf(UserID.get());
-
-        // Change the userid to the prefered Unix user
-        if (userid == null) {
-
-            /*LogDoc
-             *
-             * @phase set user id
-             * @arg0 default user id
-             */
-            mLogger.log(ILogger.EV_SYSTEM, ILogger.S_OTHER,
-                ILogger.LL_FAILURE, 
-                "OS: No user id in config file.  Running as {0}", id);
-        } else {
-            Object[] params = {userid, id};
-
-            try {
-                UserID.set(userid);
-            } catch (IllegalArgumentException e) {
-
-                /*LogDoc
-                 *
-                 * @phase set user id
-                 * @arg0 supplied user id in config
-                 * @arg1 default user id
-                 */
-                mLogger.log(ILogger.EV_SYSTEM, ILogger.S_OTHER, 
-                    ILogger.LL_FAILURE,
-                    "OS: No such user as {0}.  Running as {1}", params);
-            } catch (SecurityException e) {
-
-                /*LogDoc
-                 *
-                 * @phase set user id
-                 * @arg0 supplied user id in config
-                 * @arg1 default user id
-                 */
-                mLogger.log(ILogger.EV_SYSTEM, ILogger.S_OTHER,
-                    ILogger.LL_FAILURE, 
-                    "OS: Can't change process uid to {0}. Running as {1}", 
-                    params);
-            }
-        }
-    }
-
-    private void initNT() {
-    }
-
-    /**
-     * Stops the watchdog.  You need to call this if you want the
-     * server to really shutdown, otherwise the watchdog will just
-     * restart us.
-     * <P>
-     */
-    public static void stop() {
-        if (isUnix()) {
-            shutdownUnix();
-            Signal.send(LibC.getppid(), Signal.SIGTERM);
-        } else {
-
-            /*LogDoc
-             *
-             * @phase stop watchdog
-             */
-            CMS.getLogger().log(ILogger.EV_SYSTEM, ILogger.S_OTHER,
-                ILogger.LL_INFO, 
-                "OS: stop the NT watchdog!");
-        }
-    }
-
-    /**
-     * Stops this system.
-     * <P>
-     */
-    public void shutdown() {
-        if (isUnix()) {
-            shutdownUnix();
-        } else {
-            shutdownNT();
-        }
-    }
-
-    /**
-     * Shutdown the unix system handlers
-     * <P>
-     */
-    private static void shutdownUnix() {
-
-        // Don't accidentally stop this thread
-        //if (Thread.currentThread() != mSignalThread && mSignalThread != null) {
-        //	mSignalThread.stop();
-        //	mSignalThread = null;
-        //}
-		
-        /* Don't release this signals to protect the process
-         Signal.release(Signal.SIGHUP); 
-         Signal.release(Signal.SIGTERM);
-         Signal.release(Signal.SIGINT);
-         */
-    }
-
-    /**
-     * Shutdown the NT system handlers
-     * <P>
-     */
-    private void shutdownNT() {
-    }
-
-    /**
-     * Restart the server
-     * <P>
-     */
-    public void restart() {
-
-        /**
-         if (isUnix()) {
-         restartUnix();
-         } else {
-         restartNT();
-         }
-         **/
-    }
-
-    /**
-     * Unix restart
-     * <P>
-     */
-    private void restartUnix() {
-        // Tell watch dog to restart us
-        int ppid = LibC.getppid();
-
-        Signal.send(ppid, Signal.SIGHUP);
-    }
-
-    /**
-     * NT restart
-     * <P>
-     */
-    private void restartNT() {
-    }
-
-    /**
-     * Returns the root configuration storage of this system.
-     * <P>
-     *
-     * @return configuration store of this subsystem
-     */
-    public IConfigStore getConfigStore() {
-        return mConfig;
-    }
-
-    /**
-     * A universal routine to decide if we are Unix or something else.
-     * This is mostly used for signal handling and uids.
-     *
-     * <P>
-     * @return true if these OS the JavaVM is running on is some Unix varient
-     */
-    public static boolean isUnix() {
-        // XXX What about MacOS?
-        return (File.separatorChar == '/');
-    }
-
-    /**
-     * Unix signal thread.  Sleep for a second and then check on the
-     * signals we're interested in.  If one is set, do the right stuff
-     */
-    final class SignalThread extends Thread {
-
-        /**
-         * Signal thread constructor
-         */
-        public SignalThread() {
-            super();
-            super.setName("OsSignal-" + (Thread.activeCount() + 1));
-        }
-
-        /**
-         * Check for signal changes every second
-         */
-        public void run() {
-            while (true) {
-                // Sleep for the interval and then check for caught signals
-                // synchronized (Thread.this) {
-                synchronized (this) {
-                    try {
-                        // Thread.this.wait(1000);
-                        this.wait(1000);
-                    } catch (InterruptedException e) {
-                        // Not very interesting...
-                    }
-                }
-
-                // wants us to exit?
-                if (Signal.caught(Signal.SIGINT) > 0 ||
-                    Signal.caught(Signal.SIGTERM) > 0) {
-
-                    /*LogDoc
-                     *
-                     * @phase watchdog check
-                     */
-                    mLogger.log(ILogger.EV_SYSTEM, 
-                        ILogger.S_OTHER, 
-                        ILogger.LL_INFO,
-                        "OS: Received shutdown signal");
-                    SubsystemRegistry.getInstance().get("MAIN").shutdown();
-                    return;
-                }
-
-                // Tell to restart us
-                if (Signal.caught(Signal.SIGHUP) > 0) {
-
-                    /*LogDoc
-                     *
-                     * @phase watchdog check
-                     */
-                    mLogger.log(ILogger.EV_SYSTEM, 
-                        ILogger.S_OTHER, 
-                        ILogger.LL_INFO,
-                        "OS: Received restart signal");
-                    restart();
-                    return;
-                }
-
-            }
-        }
-
-    }
-}
-
-
-class SIGTERMListener extends SignalListener {
-    private OsSubsystem mOS;
-    public SIGTERMListener(OsSubsystem os) {
-        mOS = os;
-    }
-
-    public void process() {
-        System.out.println("SIGTERMListener process");
-        // XXX - temp, should call shutdown
-        System.exit(0);
-        //PKIServer.getPKIServer().shutdown();
-    }
-}
-
-
-class SIGINTListener extends SignalListener {
-    private OsSubsystem mOS;
-    public SIGINTListener(OsSubsystem os) {
-        mOS = os;
-    }
-
-    public void process() {
-        System.out.println("SIGINTListener process");
-        // XXX - temp, should call shutdown
-        System.exit(0);
-        //PKIServer.getPKIServer().shutdown();
-    }
-}
-
-
-class SIGHUPListener extends SignalListener {
-    private OsSubsystem mOS;
-    public SIGHUPListener(OsSubsystem os) {
-        mOS = os;
-    }
-
-    public void process() {
-        System.out.println("SIGHUPListener process");
-        // XXX - temp, should call shutdown
-        // System.exit(0);
-        //PKIServer.getPKIServer().shutdown();
-    }
-}
--- a/pki/base/common/test/com/netscape/certsrv/app/CMSEngineDefaultStub.java
+++ b/pki/base/common/test/com/netscape/certsrv/app/CMSEngineDefaultStub.java
@@ -66,7 +66,7 @@
         return null;
     }
 
-    public int getpid() {
+    public int getPID() {
         return 0;
     }
 
--- a/pki/base/console/src/CMakeLists.txt
+++ b/pki/base/console/src/CMakeLists.txt
@@ -69,11 +69,10 @@
         /usr/share/java
 )
 
-find_file(OSUTIL_JAR
+find_file(COMMONS_CODEC_JAR
     NAMES
-        osutil.jar
+        commons-codec.jar
     PATHS
-        ${JAVA_LIB_INSTALL_DIR}
         /usr/share/java
 )
 
@@ -648,7 +647,7 @@
     ${MMC_EN_JAR} ${NMCLF_JAR} ${NMCLF_EN_JAR}
     ${PKI_NSUTIL_JAR}
     ${JSS_JAR}
-    ${OSUTIL_JAR})
+    ${COMMONS_CODEC_JAR})
 
 
 # set version
--- a/pki/base/java-tools/src/CMakeLists.txt
+++ b/pki/base/java-tools/src/CMakeLists.txt
@@ -8,11 +8,10 @@
         /usr/share/java
 )
 
-find_file(OSUTIL_JAR
+find_file(COMMONS_CODEC_JAR
     NAMES
-        osutil.jar
+        commons-codec.jar
     PATHS
-        ${JAVA_LIB_INSTALL_DIR}
         /usr/share/java
 )
 
@@ -60,13 +59,13 @@
 set(CMAKE_JAVA_INCLUDE_PATH
     ${PKI_NSUTIL_JAR} ${PKI_CMSUTIL_JAR}
     ${XALAN_JAR} ${XERCES_JAR}
-    ${JSS_JAR} ${OSUTIL_JAR})
+    ${JSS_JAR} ${COMMONS_CODEC_JAR})
 
 set(CMAKE_JAVA_TARGET_VERSION ${APPLICATION_VERSION})
 
 # build pki-tools
 add_jar(pki-tools ${pki-tools_java_SRCS})
-add_dependencies(pki-tools osutil pki-nsutil pki-cmsutil)
+add_dependencies(pki-tools pki-nsutil pki-cmsutil)
 install(
     FILES
         com/netscape/cmstools/DRMTool.cfg
--- a/pki/base/java-tools/src/com/netscape/cmstools/AtoB.java
+++ b/pki/base/java-tools/src/com/netscape/cmstools/AtoB.java
@@ -21,6 +21,8 @@
 import java.io.*;
 
 
+import com.netscape.cmsutil.util.Utils;
+
 /**
  * The AtoB class is a utility program designed to "translate" an ASCII
  * BASE 64 encoded blob into a BINARY BASE 64 encoded blob.  It assumes
@@ -108,7 +110,7 @@
         // (5) Decode the ASCII BASE 64 blob enclosed in the
         //     String() object into a BINARY BASE 64 byte[] object
 
-        binaryBASE64Blob = com.netscape.osutil.OSUtil.AtoB(asciiBASE64Blob);
+        binaryBASE64Blob = Utils.base64decode(asciiBASE64Blob);
 
         // (6) Finally, print the actual AtoB blob to the
         //     specified output file
--- a/pki/base/java-tools/src/com/netscape/cmstools/AuditVerify.java
+++ b/pki/base/java-tools/src/com/netscape/cmstools/AuditVerify.java
@@ -28,6 +28,8 @@
 import java.security.interfaces.*;
 import netscape.security.x509.X509CertImpl;
 
+import com.netscape.cmsutil.util.Utils;
+
 /**
  * Tool for verifying signed audit logs
  * 
@@ -43,7 +45,7 @@
     public static final String CRYPTO_PROVIDER = "Mozilla-JSS";
 
     public static byte[] base64decode(String input) throws Exception {
-        return com.netscape.osutil.OSUtil.AtoB(input);
+        return Utils.base64decode(input);
     }
 
     // We always sign 0x0a as the line separator, regardless of what
--- a/pki/base/java-tools/src/com/netscape/cmstools/BtoA.java
+++ b/pki/base/java-tools/src/com/netscape/cmstools/BtoA.java
@@ -21,6 +21,8 @@
 import java.io.*;
 
 
+import com.netscape.cmsutil.util.Utils;
+
 /**
  * The BtoA class is a utility program designed to "translate" a BINARY
  * BASE 64 encoded blob into an ASCII BASE 64 encoded blob.  It assumes
@@ -86,7 +88,7 @@
         try {
             byte data[] = new byte[inputBlob.available()];
             inputBlob.read(data);
-            String out = com.netscape.osutil.OSUtil.BtoA(data);
+            String out = Utils.base64encode(data);
             outputBlob.write(out.getBytes());
         } catch (IOException e) {
             System.out.println("BtoA():  Unexpected BASE64 " +
--- a/pki/base/java-tools/src/com/netscape/cmstools/CMCEnroll.java
+++ b/pki/base/java-tools/src/com/netscape/cmstools/CMCEnroll.java
@@ -49,6 +49,8 @@
 
 
 
+import com.netscape.cmsutil.util.Utils;
+
 /**
  * Tool for signing PKCS #10 , return CMC enrollment request
  * 
@@ -126,7 +128,7 @@
             ContentInfo fullEnrollmentReq = null;
 
             try {
-                byte[] decodedBytes = com.netscape.osutil.OSUtil.AtoB(asciiBASE64Blob);
+                byte[] decodedBytes = Utils.base64decode(asciiBASE64Blob);
                 
                 pkcs = new PKCS10(decodedBytes);
             } catch (IOException e) {
@@ -185,7 +187,7 @@
                 dig = salt.getBytes();
             }
 
-            String sn = com.netscape.osutil.OSUtil.BtoA(dig);
+            String sn = Utils.base64encode(dig);
             
             TaggedAttribute senderNonce = new TaggedAttribute(new
                     INTEGER(bpid++),
@@ -273,7 +275,7 @@
                 ByteArrayOutputStream os = new ByteArrayOutputStream();
 
                 fullEnrollmentReq.encode(os);
-                ps.print(com.netscape.osutil.OSUtil.BtoA(os.toByteArray()));
+                ps.print(Utils.base64encode(os.toByteArray()));
                 //fullEnrollmentReq.print(ps); // no header/trailer
             } else {
                 // format is PR_REQUEST_PKCS10
@@ -414,7 +416,7 @@
                 //     String() object into a BINARY BASE 64 byte[] object
                 byte binaryBASE64Blob[] = null;
 
-                binaryBASE64Blob = com.netscape.osutil.OSUtil.AtoB(asciiBASE64Blob);
+                binaryBASE64Blob = Utils.base64decode(asciiBASE64Blob);
                 
                 // (6) Finally, print the actual CMCEnroll blob to the
                 //     specified output file
--- a/pki/base/java-tools/src/com/netscape/cmstools/CMCRequest.java
+++ b/pki/base/java-tools/src/com/netscape/cmstools/CMCRequest.java
@@ -153,7 +153,7 @@
             try {
                 for (int k=0; k<rValue.length; k++) {
                     String asciiBASE64Blob = rValue[k]; 
-                    byte[] decodedBytes = com.netscape.osutil.OSUtil.AtoB(asciiBASE64Blob);
+                    byte[] decodedBytes = Utils.base64decode(asciiBASE64Blob);
                 
                     if (format.equals("crmf")) {
                         ByteArrayInputStream reqBlob = 
@@ -260,7 +260,7 @@
                 ByteArrayOutputStream os = new ByteArrayOutputStream();
 
                 fullEnrollmentReq.encode(os);
-                ps.print(com.netscape.osutil.OSUtil.BtoA(os.toByteArray()));
+                ps.print(Utils.base64encode(os.toByteArray()));
             }
             String asciiBASE64Blob = bs.toString();
 
@@ -723,7 +723,7 @@
                 dig = salt.getBytes();
             }
 
-            sn = com.netscape.osutil.OSUtil.BtoA(dig);
+            sn = Utils.base64encode(dig);
         }
         byte bb[] = sn.getBytes(); 
         System.out.println("SenderNonce control: ");
--- a/pki/base/java-tools/src/com/netscape/cmstools/CMCRevoke.java
+++ b/pki/base/java-tools/src/com/netscape/cmstools/CMCRevoke.java
@@ -49,6 +49,8 @@
 
 
 
+import com.netscape.cmsutil.util.Utils;
+
 /**
  * Tool for signing a CMC revocation request with an agent's certificate.
  * 
@@ -312,7 +314,7 @@
             } catch (NoSuchAlgorithmException ex) {
                 dig = salt.getBytes();
             }
-            String sn = com.netscape.osutil.OSUtil.BtoA(dig);
+            String sn = Utils.base64encode(dig);
 
             TaggedAttribute senderNonce = new TaggedAttribute(new INTEGER(bpid++), OBJECT_IDENTIFIER.id_cmc_senderNonce,
                     new OCTET_STRING(sn.getBytes()));
@@ -396,7 +398,7 @@
             if (fullEnrollmentReq != null) {
                 // format is PR_REQUEST_CMC
                 fullEnrollmentReq.encode(os);
-                ps.print(com.netscape.osutil.OSUtil.BtoA(os.toByteArray()));
+                ps.print(Utils.base64encode(os.toByteArray()));
                 ////fullEnrollmentReq.print(ps); // no header/trailer
             } 
 
--- a/pki/base/java-tools/src/com/netscape/cmstools/CRMFPopClient.java
+++ b/pki/base/java-tools/src/com/netscape/cmstools/CRMFPopClient.java
@@ -309,7 +309,7 @@
                 System.out.println("."); //key pair generated");
 
 		// wrap private key
-		byte transport[] = com.netscape.osutil.OSUtil.AtoB(transportCert);
+		byte transport[] = Utils.base64decode(transportCert);
 
 		X509Certificate tcert = manager.importCACertPackage(transport);
 
@@ -483,7 +483,7 @@
 		    s1.addElement(crmfMsg);
 		    byte encoded[] = ASN1Util.encode(s1); 
 
-		    String Req1 = com.netscape.osutil.OSUtil.BtoA(encoded);
+		    String Req1 = Utils.base64encode(encoded);
 
                     if(OUTPUT_CERT_REQ != null)
                     {
--- a/pki/base/java-tools/src/com/netscape/cmstools/DRMTool.java
+++ b/pki/base/java-tools/src/com/netscape/cmstools/DRMTool.java
@@ -36,6 +36,8 @@
 import org.mozilla.jss.util.Password;
 import org.mozilla.jss.*;
 
+import com.netscape.cmsutil.util.Utils;
+
 /**
  * The DRMTool class is a utility program designed to operate on an LDIF file
  * to perform one or more of the following tasks:
@@ -1596,7 +1598,7 @@
 
         // Decode the ASCII BASE 64 certificate enclosed in the
         // String() object into a BINARY BASE 64 byte[] object
-        decodedBASE64Cert = com.netscape.osutil.OSUtil.AtoB(
+        decodedBASE64Cert = Utils.base64decode(
                                 encodedBASE64Cert );
 
         // Create an X509CertImpl() object from
@@ -1938,13 +1940,13 @@
                                                  0 );
             if( mDebug ) {
                 log( "DEBUG: sk = '"
-                   + com.netscape.osutil.OSUtil.BtoA( sk.getEncoded() )
+                   + Utils.base64encode( sk.getEncoded() )
                    + "' length = '"
                    + sk.getEncoded().length
                    + "'"
                    + NEWLINE, false );
                 log( "DEBUG: pri = '"
-                   + com.netscape.osutil.OSUtil.BtoA( pri )
+                   + Utils.base64encode( pri )
                    + "' length = '"
                    + pri.length
                    + "'"
@@ -3814,7 +3816,7 @@
                         // enclosed in the String() object
                         // into a BINARY BASE 64 byte[] object
                         source_wrappedKeyData =
-                            com.netscape.osutil.OSUtil.AtoB( data );
+                            Utils.base64decode( data );
 
                         // rewrap the source wrapped private key data
                         target_wrappedKeyData = rewrap_wrapped_key_data(
@@ -3823,7 +3825,7 @@
                         // Encode the BINARY BASE 64 byte[] object
                         // into an ASCII BASE 64 certificate
                         // enclosed in a String() object
-                        revised_data = com.netscape.osutil.OSUtil.BtoA(
+                        revised_data = Utils.base64encode(
                                            target_wrappedKeyData );
 
                         // Unformat the ASCII BASE 64 certificate
@@ -3888,7 +3890,7 @@
                         // enclosed in the String() object
                         // into a BINARY BASE 64 byte[] object
                         source_wrappedKeyData =
-                            com.netscape.osutil.OSUtil.AtoB( data );
+                            Utils.base64decode( data );
 
                         // rewrap the source wrapped private key data
                         target_wrappedKeyData = rewrap_wrapped_key_data(
@@ -3897,7 +3899,7 @@
                         // Encode the BINARY BASE 64 byte[] object
                         // into an ASCII BASE 64 certificate
                         // enclosed in a String() object
-                        revised_data = com.netscape.osutil.OSUtil.BtoA(
+                        revised_data = Utils.base64encode(
                                            target_wrappedKeyData );
 
                         // Unformat the ASCII BASE 64 certificate
--- a/pki/base/java-tools/src/com/netscape/cmstools/ExtJoiner.java
+++ b/pki/base/java-tools/src/com/netscape/cmstools/ExtJoiner.java
@@ -81,7 +81,7 @@
             DerOutputStream out = new DerOutputStream();
 
             out.putSequence(exts);
-            System.out.println(com.netscape.osutil.OSUtil.BtoA(out.toByteArray()));
+            System.out.println(Utils.base64encode(out.toByteArray()));
         } catch (IOException e) {
             System.out.println(e.toString());
         }
@@ -97,6 +97,6 @@
         } finally {
             fis.close();
         }
-        return  com.netscape.osutil.OSUtil.AtoB(new String(data));
+        return  Utils.base64decode(new String(data));
     }
 }
--- a/pki/base/java-tools/src/com/netscape/cmstools/GenExtKeyUsage.java
+++ b/pki/base/java-tools/src/com/netscape/cmstools/GenExtKeyUsage.java
@@ -22,7 +22,7 @@
 import java.util.Vector;
 import netscape.security.x509.*;
 import netscape.security.util.*;
-
+import com.netscape.cmsutil.util.Utils;
 
 /**
  * Generates a DER-encoded Extended Key Usage extension.
@@ -89,7 +89,7 @@
 
             // BASE64 encode the whole thing and write it to stdout
 
-            System.out.println(com.netscape.osutil.OSUtil.BtoA(extdos.toByteArray()));
+            System.out.println(Utils.base64encode(extdos.toByteArray()));
 
         } catch (Exception e) {
             e.printStackTrace();
--- a/pki/base/java-tools/src/com/netscape/cmstools/GenIssuerAltNameExt.java
+++ b/pki/base/java-tools/src/com/netscape/cmstools/GenIssuerAltNameExt.java
@@ -22,7 +22,7 @@
 import java.net.*;
 import netscape.security.x509.*;
 import netscape.security.util.*;
-
+import com.netscape.cmsutil.util.Utils;
 
 /**
  * This program generates an issuer alternative name extension
@@ -82,7 +82,7 @@
         ext.encode(os);
 
         System.out.println(
-            com.netscape.osutil.OSUtil.BtoA(os.toByteArray())
+            Utils.base64encode(os.toByteArray())
         );
     }
 
--- a/pki/base/java-tools/src/com/netscape/cmstools/GenSubjectAltNameExt.java
+++ b/pki/base/java-tools/src/com/netscape/cmstools/GenSubjectAltNameExt.java
@@ -22,7 +22,7 @@
 import java.net.*;
 import netscape.security.x509.*;
 import netscape.security.util.*;
-
+import com.netscape.cmsutil.util.Utils;
 
 /**
  * This program generates an subject alternative name extension
@@ -82,7 +82,7 @@
         ext.encode(os);
 
         System.out.println(
-            com.netscape.osutil.OSUtil.BtoA(os.toByteArray())
+            Utils.base64encode(os.toByteArray())
         );
     }
 
--- a/pki/base/java-tools/src/com/netscape/cmstools/HttpClient.java
+++ b/pki/base/java-tools/src/com/netscape/cmstools/HttpClient.java
@@ -41,6 +41,8 @@
 import com.netscape.cmsutil.ocsp.Request;
 
 
+import com.netscape.cmsutil.util.Utils;
+
 /**
  * This class implements a CMC Enroll client for testing.
  *
@@ -219,7 +221,7 @@
 
         ByteArrayOutputStream bs = new ByteArrayOutputStream();
         PrintStream ps = new PrintStream(bs);
-        ps.print(com.netscape.osutil.OSUtil.BtoA(bout));
+        ps.print(Utils.base64encode(bout));
         System.out.println(bs.toString());
 
         System.out.println("");
--- a/pki/base/java-tools/src/com/netscape/cmstools/OCSPClient.java
+++ b/pki/base/java-tools/src/com/netscape/cmstools/OCSPClient.java
@@ -38,7 +38,7 @@
 
 import com.netscape.cmsutil.ocsp.*;
 import com.netscape.cmsutil.ocsp.Request;
-
+import com.netscape.cmsutil.util.Utils;
 
 /**
  * This class implements a OCSP client for testing.
@@ -119,7 +119,7 @@
         dos.flush();
 
         System.out.println("Data Length: " + request_data.length);
-        System.out.println("Data: " + com.netscape.osutil.OSUtil.BtoA(request_data));
+        System.out.println("Data: " + Utils.base64encode(request_data));
 
         InputStream iiss = socket.getInputStream(); 
         FileOutputStream fof = new FileOutputStream(output);
--- a/pki/base/java-tools/src/com/netscape/cmstools/PKCS10Client.java
+++ b/pki/base/java-tools/src/com/netscape/cmstools/PKCS10Client.java
@@ -165,7 +165,7 @@
             certRequest.encode(bos);
             byte[] bb = bos.toByteArray();
 
-            String b64E = com.netscape.osutil.OSUtil.BtoA(bb);
+            String b64E = Utils.base64encode(bb);
  
             System.out.println("");
             System.out.println(b64E);
--- a/pki/base/java-tools/src/com/netscape/cmstools/PasswordCache.java
+++ b/pki/base/java-tools/src/com/netscape/cmstools/PasswordCache.java
@@ -31,6 +31,8 @@
 import org.mozilla.jss.SecretDecoderRing.Decryptor;
 import org.mozilla.jss.util.Base64OutputStream;
 
+import com.netscape.cmsutil.util.Utils;
+
 /**
  * Tool for interacting with the PWcache 
  * 
@@ -108,7 +110,7 @@
     }
 
     public static byte[] base64Decode(String s) throws IOException {
-         byte[] d = com.netscape.osutil.OSUtil.AtoB(s);
+         byte[] d = Utils.base64decode(s);
          return d;
     }
 
--- a/pki/base/java-tools/src/com/netscape/cmstools/PrettyPrintCert.java
+++ b/pki/base/java-tools/src/com/netscape/cmstools/PrettyPrintCert.java
@@ -24,7 +24,7 @@
 import java.security.cert.*;
 import netscape.security.x509.*;
 import netscape.security.util.*;
-
+import com.netscape.cmsutil.util.Utils;
 
 /**
  * The PrettyPrintCert class is a utility program designed to "pretty print"
@@ -162,7 +162,7 @@
         // (5) Decode the ASCII BASE 64 certificate enclosed in the
         //     String() object into a BINARY BASE 64 byte[] object
 
-        decodedBASE64Cert = com.netscape.osutil.OSUtil.AtoB(encodedBASE64Cert);
+        decodedBASE64Cert = Utils.base64decode(encodedBASE64Cert);
 
         // (6) Create an X509CertImpl() object from the BINARY BASE 64
         //     byte[] object
--- a/pki/base/java-tools/src/com/netscape/cmstools/PrettyPrintCrl.java
+++ b/pki/base/java-tools/src/com/netscape/cmstools/PrettyPrintCrl.java
@@ -24,7 +24,7 @@
 import java.security.cert.*;
 import netscape.security.x509.*;
 import netscape.security.util.*;
-
+import com.netscape.cmsutil.util.Utils;
 
 /**
  * The PrettyPrintCrl class is a utility program designed to "pretty print"
@@ -142,7 +142,7 @@
         // (5) Decode the ASCII BASE 64 CRL enclosed in the
         //     String() object into a BINARY BASE 64 byte[] object
 
-        decodedBASE64Crl = com.netscape.osutil.OSUtil.AtoB(encodedBASE64Crl);
+        decodedBASE64Crl = Utils.base64decode(encodedBASE64Crl);
 
         // (6) Create an X509CRLImpl() object from the BINARY BASE 64
         //     byte[] object
--- a/pki/base/java-tools/templates/pki_java_command_wrapper.in
+++ b/pki/base/java-tools/templates/pki_java_command_wrapper.in
@@ -74,15 +74,12 @@
     if [ "${ARCHITECTURE}" = "i386" ] ; then
         LD_LIBRARY_PATH=/usr/lib:/lib
         LD_LIBRARY_PATH=/usr/lib/jss:${LD_LIBRARY_PATH}
-        LD_LIBRARY_PATH=/usr/lib/osutil:${LD_LIBRARY_PATH}
         export LD_LIBRARY_PATH
     elif [ "${ARCHITECTURE}" = "x86_64" ] ; then
         LD_LIBRARY_PATH=/usr/lib:/lib
         LD_LIBRARY_PATH=/usr/lib/jss:${LD_LIBRARY_PATH}
-        LD_LIBRARY_PATH=/usr/lib/osutil:${LD_LIBRARY_PATH}
         LD_LIBRARY_PATH=/usr/lib64:/lib64:${LD_LIBRARY_PATH}
         LD_LIBRARY_PATH=/usr/lib64/jss:${LD_LIBRARY_PATH}
-        LD_LIBRARY_PATH=/usr/lib64/osutil:${LD_LIBRARY_PATH}
         export LD_LIBRARY_PATH
     else
         invalid_architecture "${ARCHITECTURE}"
@@ -135,13 +132,7 @@
     # Fedora 16+
     CP=/usr/lib64/java/jss4.jar
 fi
-CP=/usr/lib/java/osutil.jar:${CP}
-CP=/usr/lib/java/dirsec/osutil.jar:${CP}
-if [ "${OS}" = "Linux" ] &&
-   [ "${ARCHITECTURE}" = "x86_64" ] ; then
-    # Fedora 16+
-    CP=/usr/lib64/java/osutil.jar:${CP}
-fi
+CP=/usr/share/java/commons-codec.jar:${CP}
 CP=/usr/share/java/ldapjdk.jar:${CP}
 CP=/usr/share/java/${PRODUCT}/pki-nsutil.jar:${CP}
 CP=/usr/share/java/${PRODUCT}/pki-cmsutil.jar:${CP}
--- a/pki/base/java-tools/templates/pretty_print_cert_command_wrapper.in
+++ b/pki/base/java-tools/templates/pretty_print_cert_command_wrapper.in
@@ -74,15 +74,12 @@
     if [ "${ARCHITECTURE}" = "i386" ] ; then
         LD_LIBRARY_PATH=/usr/lib:/lib
         LD_LIBRARY_PATH=/usr/lib/jss:${LD_LIBRARY_PATH}
-        LD_LIBRARY_PATH=/usr/lib/osutil:${LD_LIBRARY_PATH}
         export LD_LIBRARY_PATH
     elif [ "${ARCHITECTURE}" = "x86_64" ] ; then
         LD_LIBRARY_PATH=/usr/lib:/lib
         LD_LIBRARY_PATH=/usr/lib/jss:${LD_LIBRARY_PATH}
-        LD_LIBRARY_PATH=/usr/lib/osutil:${LD_LIBRARY_PATH}
         LD_LIBRARY_PATH=/usr/lib64:/lib64:${LD_LIBRARY_PATH}
         LD_LIBRARY_PATH=/usr/lib64/jss:${LD_LIBRARY_PATH}
-        LD_LIBRARY_PATH=/usr/lib64/osutil:${LD_LIBRARY_PATH}
         export LD_LIBRARY_PATH
     else
         invalid_architecture "${ARCHITECTURE}"
@@ -135,13 +132,7 @@
     # Fedora 16+
     CP=/usr/lib64/java/jss4.jar
 fi
-CP=/usr/lib/java/osutil.jar:${CP}
-CP=/usr/lib/java/dirsec/osutil.jar:${CP}
-if [ "${OS}" = "Linux" ] &&
-   [ "${ARCHITECTURE}" = "x86_64" ] ; then
-    # Fedora 16+
-    CP=/usr/lib64/java/osutil.jar:${CP}
-fi
+CP=/usr/share/java/commons-codec.jar:${CP}
 CP=/usr/share/java/ldapjdk.jar:${CP}
 CP=/usr/share/java/${PRODUCT}/pki-nsutil.jar:${CP}
 CP=/usr/share/java/${PRODUCT}/pki-cmsutil.jar:${CP}
--- a/pki/base/java-tools/templates/pretty_print_crl_command_wrapper.in
+++ b/pki/base/java-tools/templates/pretty_print_crl_command_wrapper.in
@@ -74,15 +74,12 @@
     if [ "${ARCHITECTURE}" = "i386" ] ; then
         LD_LIBRARY_PATH=/usr/lib:/lib
         LD_LIBRARY_PATH=/usr/lib/jss:${LD_LIBRARY_PATH}
-        LD_LIBRARY_PATH=/usr/lib/osutil:${LD_LIBRARY_PATH}
         export LD_LIBRARY_PATH
     elif [ "${ARCHITECTURE}" = "x86_64" ] ; then
         LD_LIBRARY_PATH=/usr/lib:/lib
         LD_LIBRARY_PATH=/usr/lib/jss:${LD_LIBRARY_PATH}
-        LD_LIBRARY_PATH=/usr/lib/osutil:${LD_LIBRARY_PATH}
         LD_LIBRARY_PATH=/usr/lib64:/lib64:${LD_LIBRARY_PATH}
         LD_LIBRARY_PATH=/usr/lib64/jss:${LD_LIBRARY_PATH}
-        LD_LIBRARY_PATH=/usr/lib64/osutil:${LD_LIBRARY_PATH}
         export LD_LIBRARY_PATH
     else
         invalid_architecture "${ARCHITECTURE}"
@@ -135,13 +132,7 @@
     # Fedora 16+
     CP=/usr/lib64/java/jss4.jar
 fi
-CP=/usr/lib/java/osutil.jar:${CP}
-CP=/usr/lib/java/dirsec/osutil.jar:${CP}
-if [ "${OS}" = "Linux" ] &&
-   [ "${ARCHITECTURE}" = "x86_64" ] ; then
-    # Fedora 16+
-    CP=/usr/lib64/java/osutil.jar:${CP}
-fi
+CP=/usr/share/java/commons-codec.jar:${CP}
 CP=/usr/share/java/ldapjdk.jar:${CP}
 CP=/usr/share/java/${PRODUCT}/pki-nsutil.jar:${CP}
 CP=/usr/share/java/${PRODUCT}/pki-cmsutil.jar:${CP}
--- a/pki/base/kra/shared/conf/CS.cfg.in
+++ b/pki/base/kra/shared/conf/CS.cfg.in
@@ -31,6 +31,7 @@
 instanceRoot=[PKI_INSTANCE_PATH]
 machineName=[PKI_MACHINE_NAME]
 instanceId=[PKI_INSTANCE_ID]
+pidDir=[PKI_PIDDIR]
 service.machineName=[PKI_MACHINE_NAME]
 service.instanceDir=[PKI_INSTANCE_ROOT]
 service.securePort=[PKI_AGENT_SECURE_PORT]
--- a/pki/base/kra/src/CMakeLists.txt
+++ b/pki/base/kra/src/CMakeLists.txt
@@ -55,11 +55,11 @@
         ${JAVA_LIB_INSTALL_DIR}
 )
 
-find_file(OSUTIL_JAR
+find_file(COMMONS_CODEC_JAR
     NAMES
-        osutil.jar
+        commons-codec.jar
     PATHS
-        ${JAVA_LIB_INSTALL_DIR}
+        /usr/share/java
 )
 
 find_file(SYMKEY_JAR
@@ -91,7 +91,7 @@
     ${PKI_CERTSRV_JAR} ${PKI_CMS_JAR} ${PKI_CMSCORE_JAR}
     ${PKI_CMSUTIL_JAR} ${PKI_NSUTIL_JAR}
     ${LDAPJDK_JAR}
-    ${JSS_JAR} ${OSUTIL_JAR} ${SYMKEY_JAR})
+    ${JSS_JAR} ${COMMONS_CODEC_JAR} ${SYMKEY_JAR})
 
 
 # set version
@@ -100,7 +100,7 @@
 
 # build pki-kra.jar
 add_jar(pki-kra ${pki-kra_java_SRCS})
-add_dependencies(pki-kra osutil symkey pki-nsutil pki-cmsutil pki-certsrv pki-cms pki-cmscore)
+add_dependencies(pki-kra symkey pki-nsutil pki-cmsutil pki-certsrv pki-cms pki-cmscore)
 install_jar(pki-kra ${JAVA_JAR_INSTALL_DIR}/pki)
 set(PKI_KRA_JAR ${pki-kra_JAR_FILE} CACHE INTERNAL "pki-kra jar file")
 
--- a/pki/base/kra/src/com/netscape/kra/EnrollmentService.java
+++ b/pki/base/kra/src/com/netscape/kra/EnrollmentService.java
@@ -55,7 +55,7 @@
 import com.netscape.certsrv.request.*;
 import com.netscape.certsrv.authentication.*;
 import com.netscape.certsrv.apps.CMS;
-
+import com.netscape.cmsutil.util.Utils;
 
 /**
  * A class represents archival request processor. It 
@@ -563,7 +563,7 @@
             CMS.debug("EnrollmentService::getPKIArchiveOptions> crmfBlob=" + crmfBlob);
         byte[] crmfBerBlob = null;
 
-        crmfBerBlob = com.netscape.osutil.OSUtil.AtoB(crmfBlob);
+        crmfBerBlob = Utils.base64decode(crmfBlob);
         ByteArrayInputStream crmfBerBlobIn = new 	
             ByteArrayInputStream(crmfBerBlob);
         SEQUENCE crmfmsgs = null;
--- a/pki/base/kra/src/com/netscape/kra/StorageKeyUnit.java
+++ b/pki/base/kra/src/com/netscape/kra/StorageKeyUnit.java
@@ -44,7 +44,7 @@
 import org.mozilla.jss.util.Password;
 import org.mozilla.jss.crypto.*;
 import com.netscape.cmscore.cert.*;
-
+import com.netscape.cmsutil.util.Utils;
 
 /**
  * A class represents a storage key unit. Currently, this
@@ -716,9 +716,7 @@
             byte prev[] = preVerify(share);
             byte enc[] = cipher.doFinal(prev);
 
-            // #615387 - cannot use CMS.BtoA because CMS is not present during
-            // configuration
-            return com.netscape.osutil.OSUtil.BtoA(enc).trim();
+            return Utils.base64encode(enc).trim();
         } catch (NoSuchAlgorithmException e) {
             throw new EBaseException(CMS.getUserMessage("CMS_BASE_INVALID_KEY_1", 
                         e.toString()));
--- a/pki/base/ocsp/shared/conf/CS.cfg.in
+++ b/pki/base/ocsp/shared/conf/CS.cfg.in
@@ -1,6 +1,7 @@
 _000=##
 _001=## Online Certificate Status Protocol (OCSP) Responder Configuration File
 _002=##
+pidDir=[PKI_PIDDIR]
 pkicreate.pki_instance_root=[PKI_INSTANCE_ROOT]
 pkicreate.pki_instance_name=[PKI_INSTANCE_ID]
 pkicreate.subsystem_type=[PKI_SUBSYSTEM_TYPE]
--- a/pki/base/ocsp/src/CMakeLists.txt
+++ b/pki/base/ocsp/src/CMakeLists.txt
@@ -55,11 +55,11 @@
         ${JAVA_LIB_INSTALL_DIR}
 )
 
-find_file(OSUTIL_JAR
+find_file(COMMONS_CODEC_JAR
     NAMES
-        osutil.jar
+        commons-codec.jar
     PATHS
-        ${JAVA_LIB_INSTALL_DIR}
+        /usr/share/java
 )
 
 find_file(SYMKEY_JAR
@@ -84,7 +84,7 @@
     ${PKI_CERTSRV_JAR} ${PKI_CMS_JAR} ${PKI_CMSCORE_JAR}
     ${PKI_CMSUTIL_JAR} ${PKI_NSUTIL_JAR}
     ${LDAPJDK_JAR}
-    ${JSS_JAR} ${OSUTIL_JAR} ${SYMKEY_JAR})
+    ${JSS_JAR} ${COMMONS_CODEC_JAR} ${SYMKEY_JAR})
 
 
 # set version
@@ -93,7 +93,7 @@
 
 # build pki-ocsp.jar
 add_jar(pki-ocsp ${pki-ocsp_java_SRCS})
-add_dependencies(pki-ocsp osutil symkey pki-nsutil pki-cmsutil pki-certsrv pki-cms pki-cmscore)
+add_dependencies(pki-ocsp symkey pki-nsutil pki-cmsutil pki-certsrv pki-cms pki-cmscore)
 install_jar(pki-ocsp ${JAVA_JAR_INSTALL_DIR}/pki)
 set(PKI_OCSP_JAR ${pki-ocsp_JAR_FILE} CACHE INTERNAL "pki-ocsp jar file")
 
--- a/pki/base/ra/doc/CS.cfg.in
+++ b/pki/base/ra/doc/CS.cfg.in
@@ -1,6 +1,7 @@
 _000=##
 _001=## Registration Authority (RA) Configuration File
 _002=##
+pidDir=[PKI_PIDDIR]
 pkicreate.pki_instance_root=[PKI_INSTANCE_ROOT]
 pkicreate.pki_instance_name=[PKI_INSTANCE_ID]
 pkicreate.subsystem_type=[PKI_SUBSYSTEM_TYPE]
--- a/pki/base/scripts/pkicheck
+++ b/pki/base/scripts/pkicheck
@@ -9,5 +9,5 @@
 fi
 
 # For now, check for symkey (legacy package)
-rpm -qa | egrep -i pki-\|osutil\|symkey | sort | cat -n
+rpm -qa | egrep -i pki-\|symkey | sort | cat -n
 
--- a/pki/base/setup/pkicreate
+++ b/pki/base/setup/pkicreate
@@ -180,7 +180,7 @@
 my $jss_jar_base_name             = "jss4.jar";            # CA, KRA, OCSP, TKS
 my $ldapjdk_jar_base_name         = "ldapjdk.jar";         # CA, KRA, OCSP, TKS
 my $pki_nsutil_jar_base_name      = "pki-nsutil.jar";      # CA, KRA, OCSP, TKS
-my $osutil_jar_base_name          = "osutil.jar";          # CA, KRA, OCSP, TKS
+my $commons_codec_jar_base_name   = "commons-codec.jar";   # CA, KRA, OCSP, TKS
 my $symkey_jar_base_name          = "symkey.jar";          # CA, KRA, OCSP, TKS
 my $tomcatjss_jar_base_name       = "tomcatjss.jar";       # CA, KRA, OCSP, TKS
 my $velocity_jar_base_name        = "velocity.jar";        # CA, KRA, OCSP, TKS
@@ -425,7 +425,7 @@
 my $webapps_instance_path           = undef;  # CA, KRA, OCSP, TKS
 my $webapps_subsystem_instance_path = undef;  # CA, KRA, OCSP, TKS
 my $work_instance_path              = undef;  # CA, KRA, OCSP, TKS (Tomcat)
-my $pki_piddir_path                 = undef;  # RA, TPS
+my $pki_piddir_path                 = undef;  # CA, KRA, OCSP, TKS, RA, TPS
 my $pki_lockdir_path                = undef;  # RA, TPS
 
 # Base instance symbolic link paths
@@ -477,8 +477,8 @@
 my $ldapjdk_jar_symlink_path                     = undef;  # CA, KRA, OCSP, TKS
 my $pki_nsutil_jar_file_path                     = undef;  # CA, KRA, OCSP, TKS
 my $pki_nsutil_jar_symlink_path                  = undef;  # CA, KRA, OCSP, TKS
-my $osutil_jar_file_path                         = undef;  # CA, KRA, OCSP, TKS
-my $osutil_jar_symlink_path                      = undef;  # CA, KRA, OCSP, TKS
+my $commons_codec_jar_file_path                  = undef;  # CA, KRA, OCSP, TKS
+my $commons_codec_jar_symlink_path               = undef;  # CA, KRA, OCSP, TKS
 my $symkey_jar_file_path                         = undef;  # CA, KRA, OCSP, TKS
 my $symkey_jar_symlink_path                      = undef;  # CA, KRA, OCSP, TKS
 my $tomcatjss_jar_file_path                      = undef;  # CA, KRA, OCSP, TKS
@@ -1600,6 +1600,9 @@
     $pki_cfg_subsystem_file_path      = $conf_subsystem_path
                                       . "/" . $pki_cfg_base_name;
 
+    $pki_piddir_path                  = $default_apache_pids_path
+                                      . "/" . $subsystem_type;
+
     ## Initialize subdirectory paths (CA subsystems)
     if ($subsystem_type eq $CA) {
         $profile_select_template_subsystem_file_path = $ui_subsystem_path 
@@ -1688,8 +1691,6 @@
                                                    . $schemaMods_ldif_base_name;
         }
 
-        $pki_piddir_path                        = $default_apache_pids_path
-                                                . "/" . $subsystem_type;
         $pki_lockdir_path                       = $default_lockdir
                                                 . "/" . $subsystem_type;
         $pki_apache_initscript_file_path        = $pki_subsystem_common_area
@@ -1797,8 +1798,8 @@
             return 0;
         }
 
-        if (!defined($osutil_jar_file_path = find_jar($osutil_jar_base_name))) {
-            emit("could not find jar: $osutil_jar_base_name", "error");
+        if (!defined($commons_codec_jar_file_path = find_jar($commons_codec_jar_base_name))) {
+            emit("could not find jar: $commons_codec_jar_base_name", "error");
             return 0;
         }
 
@@ -1873,8 +1874,8 @@
                                            . "/" . $ldapjdk_jar_base_name;
         $pki_nsutil_jar_symlink_path       = $webinf_lib_instance_path
                                            . "/" . $pki_nsutil_jar_base_name;
-        $osutil_jar_symlink_path           = $webinf_lib_instance_path
-                                           . "/" . $osutil_jar_base_name;
+        $commons_codec_jar_symlink_path    = $webinf_lib_instance_path
+                                           . "/" . $commons_codec_jar_base_name;
         $symkey_jar_symlink_path           = $webinf_lib_instance_path
                                            . "/" . $symkey_jar_base_name;
         $pki_subsystem_jar_symlink_path    = $webinf_lib_instance_path
@@ -2332,6 +2333,7 @@
     $slot_hash{$PKI_REGISTRY_FILE_SLOT}    = $pki_registry_instance_file_path;
     $slot_hash{$PKI_USER_SLOT}             = $pki_user;
     $slot_hash{$PKI_GROUP_SLOT}            = $pki_group;
+    $slot_hash{$PKI_PIDDIR}                = $pki_piddir_path;
 
     if ($subsystem_type eq $TPS) {
         $slot_hash{$REQUIRE_CFG_PL}        = "require \"${cgi_sow_instance_cfg_pl_path}\";";
@@ -2356,7 +2358,6 @@
         $slot_hash{$TPS_DIR}               = $pki_subsystem_path;
         $slot_hash{$PKI_FLAVOR_SLOT}       = $pki_flavor;
         $slot_hash{$PKI_RANDOM_NUMBER_SLOT} = $random;
-        $slot_hash{$PKI_PIDDIR}            = $pki_piddir_path;
         $slot_hash{$PKI_LOCKDIR}           = $pki_lockdir_path;
         if (is_Fedora() || (is_RHEL() && (! is_RHEL4()))) {
             $slot_hash{$FORTITUDE_APACHE}  = "Apache2";
@@ -2865,8 +2866,8 @@
         return 0 if !create_symlink($pki_nsutil_jar_symlink_path, $pki_nsutil_jar_file_path,
                                     $pki_user, $pki_group);
 
-        # create instance symlink to "osutil.jar"
-        return 0 if !create_symlink($osutil_jar_symlink_path, $osutil_jar_file_path,
+        # create instance symlink to "commons_codec.jar"
+        return 0 if !create_symlink($commons_codec_jar_symlink_path, $commons_codec_jar_file_path,
                                     $pki_user, $pki_group);
 
         # create instance symlink to "${subsystem_type}.jar"
--- a/pki/base/silent/scripts/pkisilent
+++ b/pki/base/silent/scripts/pkisilent
@@ -51,16 +51,13 @@
 if( $ARCHITECTURE eq "i386" ) {
     $libpath="/usr/lib";
 
-    $ENV{LD_LIBRARY_PATH} = "/usr/lib/osutil:"
-                          . "/usr/lib/jss:"
+    $ENV{LD_LIBRARY_PATH} = "/usr/lib/jss:"
                           . "/usr/lib:/lib";
 } elsif($ARCHITECTURE eq "x86_64") {
     $libpath="/usr/lib64";
 
-    $ENV{LD_LIBRARY_PATH} = "/usr/lib64/osutil:"
-                          . "/usr/lib64/jss:"
+    $ENV{LD_LIBRARY_PATH} = "/usr/lib64/jss:"
                           . "/usr/lib64:/lib64:"
-                          . "/usr/lib/osutil:"
                           . "/usr/lib/jss:"
                           . "/usr/lib:/lib";
 } else {
@@ -83,19 +80,17 @@
                 . "/usr/share/java/${PRODUCT}/pki-cmsutil.jar:"
                 . "/usr/share/java/${PRODUCT}/pki-tools.jar:"
                 . "/usr/share/java/ldapjdk.jar:"
+                . "/usr/share/java/commons-codec.jar:"
                 . "/usr/share/java/xerces-j2.jar:"
                 . "/usr/share/java/xml-commons-apis.jar:"
                 . "/usr/share/java/xml-commons-resolver.jar:";
 if( $ARCHITECTURE eq "x86_64" ) {
     $ENV{CLASSPATH} = $ENV{CLASSPATH}
                     . "/usr/lib64/java/jss4.jar:"
-                    . "/usr/lib/java/jss4.jar:"
-                    . "/usr/lib64/java/osutil.jar:"
-                    . "/usr/lib/java/osutil.jar";
+                    . "/usr/lib/java/jss4.jar:";
 } else {
     $ENV{CLASSPATH} = $ENV{CLASSPATH}
-                    . "/usr/lib/java/jss4.jar:"
-                    . "/usr/lib/java/osutil.jar";
+                    . "/usr/lib/java/jss4.jar:";
 }
 
 
--- a/pki/base/silent/src/CMakeLists.txt
+++ b/pki/base/silent/src/CMakeLists.txt
@@ -76,11 +76,11 @@
     ${PKI_CERTSRV_JAR} ${PKI_CMS_JAR}
     ${PKI_CMSUTIL_JAR} ${PKI_NSUTIL_JAR}
     ${LDAPJDK_JAR} ${XERCES_JAR}
-    ${JSS_JAR} ${OSUTIL_JAR} ${SYMKEY_JAR})
+    ${JSS_JAR} ${COMMONS_CODEC_JAR} ${SYMKEY_JAR})
 
 set(CMAKE_JAVA_TARGET_VERSION ${APPLICATION_VERSION})
 
 add_jar(pki-silent ${pki-silent_java_SRCS})
-add_dependencies(pki-silent osutil symkey pki-cmsutil pki-nsutil pki-certsrv pki-cms)
+add_dependencies(pki-silent symkey pki-cmsutil pki-nsutil pki-certsrv pki-cms)
 install_jar(pki-silent ${JAVA_JAR_INSTALL_DIR}/pki)
 set(PKI_SILENT_JAR ${pki-silent_JAR_FILE} CACHE INTERNAL "pki-silent jar file")
--- a/pki/base/silent/src/ca/ConfigureCA.java
+++ b/pki/base/silent/src/ca/ConfigureCA.java
@@ -45,7 +45,6 @@
 import com.netscape.cmsutil.ocsp.*;
 import com.netscape.cmsutil.ocsp.Request;
 
-import com.netscape.osutil.OSUtil;
 
 
 public class ConfigureCA {
@@ -1061,7 +1060,7 @@
                 // Convert a byte array to base64 string
                 // cert_to_import = new sun.misc.BASE64Encoder().encode(
                 //     hr.getResponseData());
-                cert_to_import = OSUtil.BtoA(hr.getResponseData());
+                cert_to_import = Utils.base64encode(hr.getResponseData());
 
                 // Convert base64 string to a byte array
                 // buf = new sun.misc.BASE64Decoder().decodeBuffer(s);
--- a/pki/base/silent/src/common/ComCrypto.java
+++ b/pki/base/silent/src/common/ComCrypto.java
@@ -57,8 +57,7 @@
 //import sun.misc.BASE64Encoder;
 //import sun.misc.BASE64Decoder;
 import java.security.Signature;
-import com.netscape.osutil.OSUtil;
-
+import com.netscape.cmsutil.util.Utils;
 
 /**
  * CMS Test framework .
@@ -599,7 +598,7 @@
 
             // BASE64Encoder encoder = new BASE64Encoder(); 
             // String Req1 = encoder.encodeBuffer(encoded);
-            String Req1 = OSUtil.BtoA(encoded);
+            String Req1 = Utils.base64encode(encoded);
 
             // Set CRMF_REQUEST variable 
             CRMF_REQUEST = Req1;
@@ -677,7 +676,7 @@
             // wrap private key
             // BASE64Decoder decoder = new BASE64Decoder();
             // byte transport[] = decoder.decodeBuffer(transportcert);
-            byte transport[] = OSUtil.AtoB(transportcert);
+            byte transport[] = Utils.base64decode(transportcert);
 
             X509Certificate tcert = manager.importCACertPackage(transport);
 
@@ -765,7 +764,7 @@
             // BASE64Encoder encoder = new BASE64Encoder();
 
             // CRMF_REQUEST = encoder.encodeBuffer(encoded);
-            CRMF_REQUEST = OSUtil.BtoA(encoded);
+            CRMF_REQUEST = Utils.base64encode(encoded);
 
             System.out.println("Generated crmf request: ...... ");
             System.out.println("");
--- a/pki/base/silent/src/common/PostQuery.java
+++ b/pki/base/silent/src/common/PostQuery.java
@@ -19,8 +19,7 @@
 import java.net.*;
 import java.io.*;
 import java.util.*;
-
-import com.netscape.osutil.OSUtil;
+import com.netscape.cmsutil.util.Utils;
 
 /**
  * CMS Test framework .
@@ -84,7 +83,7 @@
             System.out.println("adminpwd=" + adminPWD);
             // String encoding = new sun.misc.BASE64Encoder().encode(
             //         userPassword.getBytes());
-            String encoding = OSUtil.BtoA(
+            String encoding = Utils.base64encode(
                     userPassword.getBytes());
             HttpURLConnection URLCon = (HttpURLConnection) myUrl.openConnection();
 
--- a/pki/base/silent/src/common/Utilities.java
+++ b/pki/base/silent/src/common/Utilities.java
@@ -25,8 +25,7 @@
 import sun.misc.*;
 import netscape.security.x509.*;
 import netscape.security.util.*;
-
-import com.netscape.osutil.OSUtil;
+import com.netscape.cmsutil.util.Utils;
 
 public class Utilities {
     private static final String keyValueSeparators = "=: \t\r\n\f";
@@ -306,7 +305,7 @@
         try {
             // BASE64Decoder base64 = new BASE64Decoder();
             // byte decodedBASE64Cert[] = base64.decodeBuffer(temp);
-            byte decodedBASE64Cert[] = OSUtil.AtoB(temp);
+            byte decodedBASE64Cert[] = Utils.base64decode(temp);
             X509CertImpl x509_cert = new X509CertImpl(decodedBASE64Cert);
             X509CertInfo certinfo = (X509CertInfo) x509_cert.get("x509.INFO");
 
--- a/pki/base/silent/src/drm/ConfigureDRM.java
+++ b/pki/base/silent/src/drm/ConfigureDRM.java
@@ -41,8 +41,7 @@
 import netscape.security.x509.X509CertImpl;
 import netscape.security.x509.X509Key;
 import netscape.security.x509.X500Name;
-
-import com.netscape.osutil.OSUtil;
+import com.netscape.cmsutil.util.Utils;
 
 public class ConfigureDRM
 {
@@ -833,7 +832,7 @@
         // String cert_to_import = 
         //     new sun.misc.BASE64Encoder().encode(hr.getResponseData());
         String cert_to_import = 
-            OSUtil.BtoA(hr.getResponseData());
+            Utils.base64encode(hr.getResponseData());
         System.out.println("Imported Cert=" + cert_to_import);
 
         ComCrypto cCrypt = new ComCrypto(client_certdb_dir,
--- a/pki/base/silent/src/http/HTTPClient.java
+++ b/pki/base/silent/src/http/HTTPClient.java
@@ -24,8 +24,7 @@
 
 //import sun.misc.BASE64Encoder;
 //import sun.misc.BASE64Decoder;
-import com.netscape.osutil.OSUtil;
-
+import com.netscape.cmsutil.util.Utils;
 
 import org.mozilla.jss.*;
 import org.mozilla.jss.CryptoManager;
@@ -1327,7 +1326,7 @@
 
 			// String temp = encoder.encodeBuffer((user_id + 
 			// 			":" + user_password).getBytes());
-			String temp = OSUtil.BtoA((user_id + 
+			String temp = Utils.base64encode((user_id + 
 			 			":" + user_password).getBytes());
 
 			// note: temp already contains \r and \n. 
--- a/pki/base/silent/src/ocsp/ConfigureOCSP.java
+++ b/pki/base/silent/src/ocsp/ConfigureOCSP.java
@@ -41,8 +41,7 @@
 import netscape.security.x509.X509CertImpl;
 import netscape.security.x509.X509Key;
 import netscape.security.x509.X500Name;
-
-import com.netscape.osutil.OSUtil;
+import com.netscape.cmsutil.util.Utils;
 
 public class ConfigureOCSP
 {
@@ -736,7 +735,7 @@
         // String cert_to_import = 
         //         new sun.misc.BASE64Encoder().encode(hr.getResponseData());
         String cert_to_import = 
-                OSUtil.BtoA(hr.getResponseData());
+                Utils.base64encode(hr.getResponseData());
         System.out.println("Imported Cert=" + cert_to_import);
 
         ComCrypto cCrypt = new ComCrypto(client_certdb_dir,
--- a/pki/base/silent/src/ra/ConfigureRA.java
+++ b/pki/base/silent/src/ra/ConfigureRA.java
@@ -41,8 +41,7 @@
 import netscape.security.x509.X509CertImpl;
 import netscape.security.x509.X509Key;
 import netscape.security.x509.X500Name;
-
-import com.netscape.osutil.OSUtil;
+import com.netscape.cmsutil.util.Utils;
 
 public class ConfigureRA
 {
@@ -585,7 +584,7 @@
 			// cert_to_import = 
 			//     new sun.misc.BASE64Encoder().encode(hr.getResponseData());
 			cert_to_import = 
-				OSUtil.BtoA(hr.getResponseData());
+				Utils.base64encode(hr.getResponseData());
 
 		}
 		catch (Exception e)
--- a/pki/base/silent/src/subca/ConfigureSubCA.java
+++ b/pki/base/silent/src/subca/ConfigureSubCA.java
@@ -42,8 +42,6 @@
 import com.netscape.cmsutil.ocsp.*;
 import com.netscape.cmsutil.ocsp.Request;
 
-import com.netscape.osutil.OSUtil;
-
 public class ConfigureSubCA
 {
 
@@ -777,7 +775,7 @@
         // String cert_to_import = 
         //         new sun.misc.BASE64Encoder().encode(hr.getResponseData());
         String cert_to_import = 
-                OSUtil.BtoA(hr.getResponseData());
+                Utils.base64encode(hr.getResponseData());
         System.out.println("Imported Cert=" + cert_to_import);
 
         ComCrypto cCrypt = new ComCrypto(client_certdb_dir,
--- a/pki/base/silent/src/tks/ConfigureTKS.java
+++ b/pki/base/silent/src/tks/ConfigureTKS.java
@@ -41,8 +41,7 @@
 import netscape.security.x509.X509CertImpl;
 import netscape.security.x509.X509Key;
 import netscape.security.x509.X500Name;
-
-import com.netscape.osutil.OSUtil;
+import com.netscape.cmsutil.util.Utils;
 
 public class ConfigureTKS
 {
@@ -704,7 +703,7 @@
         // String cert_to_import = 
         //         new sun.misc.BASE64Encoder().encode(hr.getResponseData());
         String cert_to_import = 
-                OSUtil.BtoA(hr.getResponseData());
+                Utils.base64encode(hr.getResponseData());
         System.out.println("Imported Cert=" + cert_to_import);
 
         ComCrypto cCrypt = new ComCrypto(client_certdb_dir,
--- a/pki/base/silent/src/tps/ConfigureTPS.java
+++ b/pki/base/silent/src/tps/ConfigureTPS.java
@@ -41,8 +41,7 @@
 import netscape.security.x509.X509CertImpl;
 import netscape.security.x509.X509Key;
 import netscape.security.x509.X500Name;
-
-import com.netscape.osutil.OSUtil;
+import com.netscape.cmsutil.util.Utils;
 
 public class ConfigureTPS
 {
@@ -718,7 +717,7 @@
 			// cert_to_import = 
 			//     new sun.misc.BASE64Encoder().encode(hr.getResponseData());
 			cert_to_import = 
-				OSUtil.BtoA(hr.getResponseData());
+				Utils.base64encode(hr.getResponseData());
 
 		}
 		catch (Exception e)
--- a/pki/base/tks/shared/conf/CS.cfg.in
+++ b/pki/base/tks/shared/conf/CS.cfg.in
@@ -1,6 +1,7 @@
 _000=##
 _001=## Token Key Service (TKS) Configuration File
 _002=##
+pidDir=[PKI_PIDDIR]
 pkicreate.pki_instance_root=[PKI_INSTANCE_ROOT]
 pkicreate.pki_instance_name=[PKI_INSTANCE_ID]
 pkicreate.subsystem_type=[PKI_SUBSYSTEM_TYPE]
--- a/pki/base/tks/src/CMakeLists.txt
+++ b/pki/base/tks/src/CMakeLists.txt
@@ -55,11 +55,11 @@
         ${JAVA_LIB_INSTALL_DIR}
 )
 
-find_file(OSUTIL_JAR
+find_file(COMMONS_CODEC_JAR
     NAMES
-        osutil.jar
+        commons-codec.jar
     PATHS
-        ${JAVA_LIB_INSTALL_DIR}
+        /usr/share/java
 )
 
 find_file(SYMKEY_JAR
@@ -81,7 +81,7 @@
     ${PKI_CERTSRV_JAR} ${PKI_CMS_JAR} ${PKI_CMSCORE_JAR}
     ${PKI_CMSUTIL_JAR} ${PKI_NSUTIL_JAR}
     ${LDAPJDK_JAR}
-    ${JSS_JAR} ${OSUTIL_JAR} ${SYMKEY_JAR})
+    ${JSS_JAR} ${COMMONS_CODEC_JAR} ${SYMKEY_JAR})
 
 
 # set version
@@ -90,7 +90,7 @@
 
 # build pki-tks.jar
 add_jar(pki-tks ${pki-tks_java_SRCS})
-add_dependencies(pki-tks osutil symkey pki-nsutil pki-cmsutil pki-certsrv pki-cms pki-cmscore)
+add_dependencies(pki-tks symkey pki-nsutil pki-cmsutil pki-certsrv pki-cms pki-cmscore)
 install_jar(pki-tks ${JAVA_JAR_INSTALL_DIR}/pki)
 set(PKI_TKS_JAR ${pki-tks_JAR_FILE} CACHE INTERNAL "pki-tks jar file")
 
--- a/pki/base/tps/doc/CS.cfg.in
+++ b/pki/base/tps/doc/CS.cfg.in
@@ -1,6 +1,7 @@
 _000=##
 _001=## Token Processing System (TPS) Configuration File
 _002=##
+pidDir=[PKI_PIDDIR]
 pkicreate.pki_instance_root=[PKI_INSTANCE_ROOT]
 pkicreate.pki_instance_name=[PKI_INSTANCE_ID]
 pkicreate.subsystem_type=[PKI_SUBSYSTEM_TYPE]
--- a/pki/base/util/src/CMakeLists.txt
+++ b/pki/base/util/src/CMakeLists.txt
@@ -16,11 +16,10 @@
         /usr/share/java
 )
 
-find_file(OSUTIL_JAR
+find_file(COMMONS_CODEC_JAR
     NAMES
-        osutil.jar
+        commons-codec.jar
     PATHS
-        ${JAVA_LIB_INSTALL_DIR}
         /usr/share/java
 )
 
@@ -331,21 +330,20 @@
 
 set(CMAKE_JAVA_INCLUDE_PATH
     ${LDAPJDK_JAR} ${XALAN_JAR} ${XERCES_JAR}
-    ${JSS_JAR} ${OSUTIL_JAR})
+    ${JSS_JAR} ${COMMONS_CODEC_JAR})
 
 set(CMAKE_JAVA_TARGET_VERSION ${APPLICATION_VERSION})
 
 # build pki-nsutil
 set(CMAKE_JAR_CLASSES_PREFIX netscape)
 add_jar(pki-nsutil ${pki-nsutil_java_SRCS})
-add_dependencies(pki-nsutil osutil)
 install_jar(pki-nsutil ${JAVA_JAR_INSTALL_DIR}/pki)
 set(PKI_NSUTIL_JAR ${pki-nsutil_JAR_FILE} CACHE INTERNAL "pki-nsutil jar file")
 
 # build pki-cmsutil
 set(CMAKE_JAR_CLASSES_PREFIX com/netscape/cmsutil)
 add_jar(pki-cmsutil ${pki-cmsutil_java_SRCS})
-add_dependencies(pki-cmsutil osutil pki-nsutil)
+add_dependencies(pki-cmsutil pki-nsutil)
 install_jar(pki-cmsutil ${JAVA_JAR_INSTALL_DIR}/pki)
 set(PKI_CMSUTIL_JAR ${pki-cmsutil_JAR_FILE} CACHE INTERNAL "pki-cmsutil jar file")
 
--- a/pki/base/util/src/com/netscape/cmsutil/crypto/CryptoUtil.java
+++ b/pki/base/util/src/com/netscape/cmsutil/crypto/CryptoUtil.java
@@ -55,8 +55,7 @@
 import netscape.security.pkcs.*;
 import netscape.security.x509.*;
 import com.netscape.cmsutil.util.Cert;
-
-import com.netscape.osutil.OSUtil;
+import com.netscape.cmsutil.util.Utils;
 
 public class CryptoUtil {
 
@@ -75,7 +74,7 @@
             return
                     "-----BEGIN CERTIFICATE-----\n"
                 //  + mEncoder.encodeBuffer(cert.getEncoded())
-                    + OSUtil.BtoA( cert.getEncoded() )
+                    + Utils.base64encode( cert.getEncoded() )
                     + "-----END CERTIFICATE-----\n";
         } catch (Exception e) {}
         return null;
@@ -262,7 +261,7 @@
     public static byte[] base64Decode(String s) throws IOException {
      // BASE64Decoder base64 = new BASE64Decoder();
      // byte[] d = base64.decodeBuffer(s);
-        byte[] d = OSUtil.AtoB( s );
+        byte[] d = Utils.base64decode( s );
                                                                                 
         return d;
     }
--- a/pki/base/util/src/com/netscape/cmsutil/util/Cert.java
+++ b/pki/base/util/src/com/netscape/cmsutil/util/Cert.java
@@ -23,7 +23,6 @@
 import netscape.security.x509.X509CertImpl;
 import org.mozilla.jss.crypto.SignatureAlgorithm;
 //import sun.misc.BASE64Decoder;
-import com.netscape.osutil.OSUtil;
 
 import java.io.IOException;
 import java.security.cert.CertificateException;
@@ -96,7 +95,7 @@
         mime64 = stripCertBrackets(mime64.trim());
         String newval = normalizeCertStr(mime64);
      // byte rawPub[] = mDecoder.decodeBuffer(newval);
-        byte rawPub[] = OSUtil.AtoB( newval );
+        byte rawPub[] = Utils.base64decode( newval );
         X509CertImpl cert = null;
 
         try {
@@ -111,7 +110,7 @@
         mime64 = stripCertBrackets(mime64.trim());
         String newval = normalizeCertStr(mime64);
      // byte rawPub[] = mDecoder.decodeBuffer(newval);
-        byte rawPub[] = OSUtil.AtoB( newval );
+        byte rawPub[] = Utils.base64decode( newval );
         PKCS7 p7 = null;
 
         try {
@@ -127,7 +126,7 @@
         mime64 = stripCRLBrackets(mime64.trim());
         String newval = normalizeCertStr(mime64);
      // byte rawPub[] = mDecoder.decodeBuffer(newval);
-        byte rawPub[] = OSUtil.AtoB( newval );
+        byte rawPub[] = Utils.base64decode( newval );
         X509CRL crl = null;
 
         try {
@@ -141,7 +140,7 @@
         throws IOException {
         mime64 = stripCRLBrackets(mime64.trim());
 
-        byte rawPub[] = OSUtil.AtoB(mime64);
+        byte rawPub[] = Utils.base64decode(mime64);
         X509CRL crl = null;
 
         try {
--- a/pki/base/util/src/com/netscape/cmsutil/util/Utils.java
+++ b/pki/base/util/src/com/netscape/cmsutil/util/Utils.java
@@ -17,6 +17,7 @@
 // --- END COPYRIGHT BLOCK ---
 package com.netscape.cmsutil.util;
 
+import org.apache.commons.codec.binary.Base64;
 
 import java.net.*;
 import java.io.*;
@@ -28,9 +29,13 @@
 	 * Checks if this is NT.
 	 */
 	public static boolean isNT() {
-		return ((File.separator).equals("\\"));
+		return File.separator.equals("\\");
 	}
 
+        public static boolean isUnix() {
+        return File.separator.equals("/");
+        }
+
 	public static boolean exec(String cmd) {
 		try {
 			String cmds[] = null;
@@ -241,11 +246,20 @@
      * there'll be trouble if the Vector contains something other
      * than just Strings
      */
-    public static String[] getStringArrayFromVector(Vector v) {
+    public static String[] getStringArrayFromVector(Vector<String> v) {
         String s[] = new String[v.size()];
 
         v.copyInto(s);
         return s;
     }
 
+    public static String base64encode(byte[] bytes) {
+        String string = new Base64(64).encodeToString(bytes);
+        return string;
+    }
+
+    public static byte[] base64decode(String string) {
+        byte[] bytes = Base64.decodeBase64(string);
+        return bytes;
+    }
 }
--- a/pki/base/util/src/netscape/security/extensions/AuthInfoAccessExtension.java
+++ b/pki/base/util/src/netscape/security/extensions/AuthInfoAccessExtension.java
@@ -29,6 +29,7 @@
 import netscape.security.x509.*;
 import netscape.security.util.*;
 
+import com.netscape.cmsutil.util.Utils;
 
 /**
  * This represents the authority information access extension
@@ -237,7 +238,7 @@
         try {
             aia.encode(os);
 
-            System.out.println(com.netscape.osutil.OSUtil.BtoA(os.toByteArray()));
+            System.out.println(Utils.base64encode(os.toByteArray()));
         } catch (IOException e) {
             System.out.println(e.toString());
         }
--- a/pki/base/util/src/netscape/security/extensions/SubjectInfoAccessExtension.java
+++ b/pki/base/util/src/netscape/security/extensions/SubjectInfoAccessExtension.java
@@ -28,7 +28,7 @@
 import java.security.cert.CertificateException;
 import netscape.security.x509.*;
 import netscape.security.util.*;
-
+import com.netscape.cmsutil.util.Utils;
 
 /**
  * This represents the subject information access extension
@@ -218,7 +218,7 @@
         try {
             aia.encode(os);
 
-            System.out.println(com.netscape.osutil.OSUtil.BtoA(os.toByteArray()));
+            System.out.println(Utils.base64encode(os.toByteArray()));
         } catch (IOException e) {
             System.out.println(e.toString());
         }
--- a/pki/base/util/src/netscape/security/pkcs/PKCS10.java
+++ b/pki/base/util/src/netscape/security/pkcs/PKCS10.java
@@ -27,6 +27,7 @@
 import java.security.SignatureException;
 import java.security.PublicKey;
 
+import com.netscape.cmsutil.util.Utils;
 
 import netscape.security.util.*;	// DER
 import netscape.security.x509.AlgorithmId;
@@ -325,7 +326,7 @@
 	
 
 	out.println ("-----BEGIN NEW CERTIFICATE REQUEST-----");
-	out.println (com.netscape.osutil.OSUtil.BtoA(certificateRequest));
+	out.println (Utils.base64encode(certificateRequest));
 	out.println ("-----END NEW CERTIFICATE REQUEST-----");
     }
 
--- a/pki/base/util/src/netscape/security/x509/CertificatePoliciesExtension.java
+++ b/pki/base/util/src/netscape/security/x509/CertificatePoliciesExtension.java
@@ -27,7 +27,9 @@
 import java.security.cert.CertificateNotYetValidException;
 import java.util.*;
 import netscape.security.util.*;
- 
+
+import com.netscape.cmsutil.util.Utils;
+
 /**
  * This class defines the Certificate Policies Extension.
  * 
@@ -316,7 +318,7 @@
 				new CertificatePoliciesExtension(infos);
 
 	              // BASE64 encode the whole thing and write it to stdout
-	              System.out.println( com.netscape.osutil.OSUtil.BtoA(ext.getExtensionValue()) );
+	              System.out.println(Utils.base64encode(ext.getExtensionValue()));
 		} catch (IOException e) {
 			System.out.println(e.toString());
 		}
--- a/pki/scripts/prepare_dogtag_pki
+++ b/pki/scripts/prepare_dogtag_pki
@@ -211,6 +211,7 @@
     APACHE_COMMONS_LANG="jakarta-commons-lang"
     APACHE_COMMONS_LOGGING="jakarta-commons-logging"
 fi
+APACHE_COMMONS_CODEC="apache-commons-codec"
 JAKARTA_COMMONS_COLLECTIONS="jakarta-commons-collections"
 JAKARTA_COMMONS_DBCP="jakarta-commons-dbcp"
 JAKARTA_COMMONS_POOL="jakarta-commons-pool"
@@ -245,9 +246,6 @@
 OPENLDAP_CLIENTS="openldap-clients"
 OPENLDAP_DEVEL="openldap-devel"
 
-# Operating System Utilities
-OSUTIL="osutil"
-
 # Perl Modules
 PERL_CRYPT_SSLEAY="perl-Crypt-SSLeay"
 PERL_DBD_SQLITE="perl-DBD-SQLite"
@@ -293,7 +291,7 @@
 XML_COMMONS_RESOLVER="xml-commons-resolver"
 
 # Create a catch-all variable for PKI Support Packages
-PKI_SUPPORT_PACKAGES="${APR} ${APR_DEVEL} ${APR_UTIL} ${APR_UTIL_DEVEL} ${EXPAT} ${EXPAT_DEVEL} ${HTTPD} ${HTTPD_DEVEL} ${HTTPD_TOOLS} ${PCRE} ${PCRE_DEVEL} ${TOMCAT6} ${TOMCAT6_LIB} ${APACHE_COMMONS_LANG} ${APACHE_COMMONS_LANG} ${APACHE_COMMONS_LOGGING} ${JAKARTA_COMMONS_COLLECTIONS} ${JAKARTA_COMMONS_DBCP} ${JAKARTA_COMMONS_POOL} ${NSPR} ${NSPR_DEVEL} ${NSS} ${NSS_DEVEL} ${NSS_TOOLS} ${JSS} ${JSS_JAVADOC} ${TOMCATJSS} ${MOD_NSS} ${MOD_PERL} ${MOD_REVOCATOR} ${IDM_CONSOLE_FRAMEWORK} ${CYRUS_SASL} ${CYRUS_SASL_DEVEL} ${LDAPJDK} ${OPENLDAP} ${OPENLDAP_CLIENTS} ${OPENLDAP_DEVEL} ${OSUTIL} ${PERL_CRYPT_SSLEAY} ${PERL_DBD_SQLITE} ${PERL_DBI} ${PERL_HTML_PARSER} ${PERL_HTML_TAGSET} ${PERL_LIBWWW_PERL} ${PERL_MOZILLA_LDAP} ${PERL_PARSE_RECDESCENT} ${PERL_URI} ${PERL_XML_NAMESPACESUPPORT} ${PERL_XML_PARSER} ${PERL_XML_SAX} ${PERL_XML_SIMPLE} ${ESC} ${SVRCORE} ${SVRCORE_DEVEL} ${POLICYCOREUTILS} ${SELINUX_POLICY_DEVEL} ${SELINUX_POLICY_TARGETED} ${SQLITE} ${SQLITE_DEVEL} ${VELOCITY} ${BCEL} ${JAKARTA_ORO} ${JDOM} ${LOG4J} ${REGEXP} ${WERKEN_XPATH} ${XALAN_J2} ${XERCES_J2} ${XML_COMMONS_APIS} ${XML_COMMONS_RESOLVER}"
+PKI_SUPPORT_PACKAGES="${APR} ${APR_DEVEL} ${APR_UTIL} ${APR_UTIL_DEVEL} ${EXPAT} ${EXPAT_DEVEL} ${HTTPD} ${HTTPD_DEVEL} ${HTTPD_TOOLS} ${PCRE} ${PCRE_DEVEL} ${TOMCAT6} ${TOMCAT6_LIB} ${APACHE_COMMONS_LANG} ${APACHE_COMMONS_LANG} ${APACHE_COMMONS_LOGGING} ${APACHE_COMMONS_CODEC} ${JAKARTA_COMMONS_COLLECTIONS} ${JAKARTA_COMMONS_DBCP} ${JAKARTA_COMMONS_POOL} ${NSPR} ${NSPR_DEVEL} ${NSS} ${NSS_DEVEL} ${NSS_TOOLS} ${JSS} ${JSS_JAVADOC} ${TOMCATJSS} ${MOD_NSS} ${MOD_PERL} ${MOD_REVOCATOR} ${IDM_CONSOLE_FRAMEWORK} ${CYRUS_SASL} ${CYRUS_SASL_DEVEL} ${LDAPJDK} ${OPENLDAP} ${OPENLDAP_CLIENTS} ${OPENLDAP_DEVEL} ${PERL_CRYPT_SSLEAY} ${PERL_DBD_SQLITE} ${PERL_DBI} ${PERL_HTML_PARSER} ${PERL_HTML_TAGSET} ${PERL_LIBWWW_PERL} ${PERL_MOZILLA_LDAP} ${PERL_PARSE_RECDESCENT} ${PERL_URI} ${PERL_XML_NAMESPACESUPPORT} ${PERL_XML_PARSER} ${PERL_XML_SAX} ${PERL_XML_SIMPLE} ${ESC} ${SVRCORE} ${SVRCORE_DEVEL} ${POLICYCOREUTILS} ${SELINUX_POLICY_DEVEL} ${SELINUX_POLICY_TARGETED} ${SQLITE} ${SQLITE_DEVEL} ${VELOCITY} ${BCEL} ${JAKARTA_ORO} ${JDOM} ${LOG4J} ${REGEXP} ${WERKEN_XPATH} ${XALAN_J2} ${XERCES_J2} ${XML_COMMONS_APIS} ${XML_COMMONS_RESOLVER}"
 
 ###########################################
 # Establish PKI Installation Dependencies #
--- a/pki/scripts/remove_pki_components
+++ b/pki/scripts/remove_pki_components
@@ -108,14 +108,7 @@
     # (1) grab all PKI components
     PKI_COMPONENTS=`rpm -qa --queryformat '%{NAME}\n' | grep pki`
 
-    # (2) check for osutil
-    `rpm -q --quiet osutil`
-    OSUTIL_PRESENCE=$?
-    if [ "${OSUTIL_PRESENCE}" = "0" ] ; then
-        PKI_COMPONENTS="${PKI_COMPONENTS} osutil"
-    fi
-
-    # (3) check for symkey (legacy package)
+    # (2) check for symkey (legacy package)
     `rpm -q --quiet symkey`
     SYMKEY_PRESENCE=$?
     if [ "${SYMKEY_PRESENCE}" = "0" ] ; then
--- a/pki/specs/dogtag-pki.spec
+++ b/pki/specs/dogtag-pki.spec
@@ -68,10 +68,11 @@
 %endif
 %endif
 
+Requires:         apache-commons-codec
+
 # Make certain that this 'meta' package requires the latest version(s)
 # of ALL top-level Dogtag PKI support packages
 Requires:         jss >= %{jss_version}
-Requires:         osutil >= %{osutil_version}
 Requires:         tomcatjss >= %{tomcatjss_version}
 
 # Make certain that this 'meta' package requires the latest version(s)
--- a/pki/specs/pki-core.spec
+++ b/pki/specs/pki-core.spec
@@ -17,6 +17,7 @@
 BuildRequires:    cmake
 BuildRequires:    java-devel >= 1:1.6.0
 BuildRequires:    ldapjdk
+BuildRequires:    apache-commons-codec
 BuildRequires:    nspr-devel
 BuildRequires:    nss-devel
 BuildRequires:    openldap-devel
@@ -185,19 +186,17 @@
 
 Requires:         java >= 1:1.6.0
 Requires:         ldapjdk
+Requires:         apache-commons-codec
 %if 0%{?fedora} >= 16
 Requires:         jpackage-utils >= 0:1.7.5-10
 Requires:         jss >= 4.2.6-19.1
-Requires:         osutil >= 2.0.2
 %else
 %if 0%{?fedora} >= 15
 Requires:         jpackage-utils
 Requires:         jss >= 4.2.6-17
-Requires:         osutil >= 2.0.1
 %else
 Requires:         jpackage-utils
 Requires:         jss >= 4.2.6-17
-Requires:         osutil
 %endif
 %endif
 
--- a/pki/tools/jar/README.jar-tools
+++ b/pki/tools/jar/README.jar-tools
@@ -227,7 +227,7 @@
 Summary:
 21 Unique Jar's
      /usr/lib/jss/jss4-4.2.6.jar
-     /usr/lib/osutil/osutil-2.0.0.jar
+     /usr/share/java/commons-codec.jar
      /usr/lib/symkey/symkey-9.0.0.jar
      /usr/share/java/jakarta-taglibs-core-1.1.1.jar
      /usr/share/java/ldapbeans-4.18.jar
@@ -251,7 +251,7 @@
      jakarta-taglibs-standard
      jss
      ldapjdk
-     osutil
+     apache-commons-codec
      pki-common
      pki-console
      pki-symkey
